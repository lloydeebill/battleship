(()=>{var n={208:(n,e,t)=>{"use strict";t.d(e,{A:()=>p});var i=t(354),o=t.n(i),r=t(314),a=t.n(r),s=t(417),A=t.n(s),l=new URL(t(233),t.b),c=a()(o());c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Notable&display=swap);"]),c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Anton+SC&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Noto+Sans+Symbols:wght@100..900&display=swap);"]);var d=A()(l);c.push([n.id,`*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n\nli {\n  list-style: none;\n}\n\nhtml {\n  font-family: 'Montserrat', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\nhtml,\nbody {\n  height: 100vh;\n}\n\n\nbody {\n  background-image: url(${d});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nmain {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.landing-frame {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n\n.landing-frame>h1 {\n  font-size: 6rem;\n  font-style: italic;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  margin-bottom: 50px;\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  -webkit-text-stroke: 2px black;\n}\n\n@keyframes moveUpDown {\n  0% {\n    transform: translateY(0);\n  }\n\n  50% {\n    transform: translateY(-20px);\n  }\n\n  100% {\n    transform: translateY(0);\n  }\n}\n\n.play-button {\n  width: 250px;\n  height: 70px;\n  padding-bottom: 10px;\n  font-size: 2.0rem;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-bottom-right-radius: 40%;\n  border-bottom-left-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.play-button:hover,\n.start-game-button:hover {\n  background-color: rgb(255, 105, 5);\n  color: black;\n  cursor: pointer;\n}\n\n.setupboard-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n}\n\n.player-board,\n.enemy-board {\n  width: 500px;\n  height: 500px;\n  background-color: white;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.player-board-container {\n  displaY: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.rotate-btn {\n  width: 40px;\n  height: 40px;\n}\n\n.rotate-btn:hover {\n  position: relative;\n  cursor: pointer;\n  bottom: 5px;\n}\n\n.ship-options {\n  width: 500px;\n  height: 500px;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  justify-content: center;\n  align-items: center;\n}\n\n.ship-options-container {\n  display: flex;\n  flex-direction: column;\n  gap: 15px\n}\n\n.notification-msg {\n  color: black;\n}\n\n\n.enemy-board-container {\n  display: none;\n}\n\n.enemy-cell,\n.player-cell {\n  width: 50px;\n  height: 50px;\n  border: 1px solid black;\n  box-sizing: border-box;\n}\n\n\n.ship-chosen {\n  border: 2px solid white;\n}\n\n.carrier-preview {\n  width: 250px;\n  height: 50px;\n  background-color: red;\n}\n\n.battleship-preview {\n  width: 200px;\n  height: 50px;\n  background-color: orange;\n}\n\n.destroyer-preview {\n  width: 150px;\n  height: 50px;\n  background-color: yellow;\n}\n\n.submarine-preview {\n  width: 100px;\n  height: 50px;\n  background-color: green;\n}\n\n.ship-preview {\n  background-color: rgba(0, 128, 255, 0.5);\n}\n\n.Carrier {\n  background-color: red;\n}\n\n.Battleship {\n  background-color: orange;\n}\n\n.Destroyer {\n  background-color: yellow;\n}\n\n.Submarine {\n  background-color: green;\n}\n\n.notif-btn-container {\n  display: flex;\n  align-items: center;\n  gap: 30px;\n}\n\n.start-game-modal {\n  display: none;\n  z-index: 1;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.start-game-modal-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 10%;\n  width: 100%;\n  height: 80%;\n}\n\n.start-game-title {\n  font-size: 4rem;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  margin-bottom: 50px;\n  -webkit-text-stroke: 2px black;\n}\n\n.start-game-button {\n  width: 250px;\n  font-size: 2.5rem;\n  padding-bottom: 15px;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-top-right-radius: 40%;\n  border-bottom-right-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.game-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 100px;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Notable&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Anton+SC&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Noto+Sans+Symbols:wght@100..900&display=swap');\n\n\n\n\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n\nli {\n  list-style: none;\n}\n\nhtml {\n  font-family: 'Montserrat', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\nhtml,\nbody {\n  height: 100vh;\n}\n\n\nbody {\n  background-image: url(\"img/bg-img.webp\");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nmain {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.landing-frame {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n\n.landing-frame>h1 {\n  font-size: 6rem;\n  font-style: italic;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  margin-bottom: 50px;\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  -webkit-text-stroke: 2px black;\n}\n\n@keyframes moveUpDown {\n  0% {\n    transform: translateY(0);\n  }\n\n  50% {\n    transform: translateY(-20px);\n  }\n\n  100% {\n    transform: translateY(0);\n  }\n}\n\n.play-button {\n  width: 250px;\n  height: 70px;\n  padding-bottom: 10px;\n  font-size: 2.0rem;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-bottom-right-radius: 40%;\n  border-bottom-left-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.play-button:hover,\n.start-game-button:hover {\n  background-color: rgb(255, 105, 5);\n  color: black;\n  cursor: pointer;\n}\n\n.setupboard-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n}\n\n.player-board,\n.enemy-board {\n  width: 500px;\n  height: 500px;\n  background-color: white;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.player-board-container {\n  displaY: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.rotate-btn {\n  width: 40px;\n  height: 40px;\n}\n\n.rotate-btn:hover {\n  position: relative;\n  cursor: pointer;\n  bottom: 5px;\n}\n\n.ship-options {\n  width: 500px;\n  height: 500px;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  justify-content: center;\n  align-items: center;\n}\n\n.ship-options-container {\n  display: flex;\n  flex-direction: column;\n  gap: 15px\n}\n\n.notification-msg {\n  color: black;\n}\n\n\n.enemy-board-container {\n  display: none;\n}\n\n.enemy-cell,\n.player-cell {\n  width: 50px;\n  height: 50px;\n  border: 1px solid black;\n  box-sizing: border-box;\n}\n\n\n.ship-chosen {\n  border: 2px solid white;\n}\n\n.carrier-preview {\n  width: 250px;\n  height: 50px;\n  background-color: red;\n}\n\n.battleship-preview {\n  width: 200px;\n  height: 50px;\n  background-color: orange;\n}\n\n.destroyer-preview {\n  width: 150px;\n  height: 50px;\n  background-color: yellow;\n}\n\n.submarine-preview {\n  width: 100px;\n  height: 50px;\n  background-color: green;\n}\n\n.ship-preview {\n  background-color: rgba(0, 128, 255, 0.5);\n}\n\n.Carrier {\n  background-color: red;\n}\n\n.Battleship {\n  background-color: orange;\n}\n\n.Destroyer {\n  background-color: yellow;\n}\n\n.Submarine {\n  background-color: green;\n}\n\n.notif-btn-container {\n  display: flex;\n  align-items: center;\n  gap: 30px;\n}\n\n.start-game-modal {\n  display: none;\n  z-index: 1;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.start-game-modal-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 10%;\n  width: 100%;\n  height: 80%;\n}\n\n.start-game-title {\n  font-size: 4rem;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  margin-bottom: 50px;\n  -webkit-text-stroke: 2px black;\n}\n\n.start-game-button {\n  width: 250px;\n  font-size: 2.5rem;\n  padding-bottom: 15px;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-top-right-radius: 40%;\n  border-bottom-right-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.game-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 100px;\n}"],sourceRoot:""}]);const p=c},314:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(i)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);i&&a[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},417:n=>{"use strict";n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(o," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},72:n=>{"use strict";var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var r={},a=[],s=0;s<n.length;s++){var A=n[s],l=i.base?A[0]+i.base:A[0],c=r[l]||0,d="".concat(l," ").concat(c);r[l]=c+1;var p=t(d),h={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(h);else{var u=o(h,i);i.byIndex=s,e.splice(s,0,{identifier:d,updater:u,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=i(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var s=t(r[a]);e[s].references--}for(var A=i(n,o),l=0;l<r.length;l++){var c=t(r[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}r=A}}},659:n=>{"use strict";var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},540:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{"use strict";n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,o&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},373:()=>{},233:(n,e,t)=>{"use strict";n.exports=t.p+"img/bg-img.webp"}},e={};function t(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={id:i,exports:{}};return n[i](r,r.exports,t),r.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");if(i.length)for(var o=i.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=i[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{"use strict";var n=t(72),e=t.n(n),i=t(825),o=t.n(i),r=t(659),a=t.n(r),s=t(56),A=t.n(s),l=t(540),c=t.n(l),d=t(113),p=t.n(d),h=t(208),u={};u.styleTagTransform=p(),u.setAttributes=A(),u.insert=a().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=c(),e()(h.A,u),h.A&&h.A.locals&&h.A.locals;const m=t.p+"img/rotate.svg";class b{constructor(n,e){this.name=n,this.size=e,this.hits=0,this.position=[]}isSunk(){if(this.hits===this.size)return!0}hit(){this.hits++}setPosition(n){this.position=n}}class C{constructor(n){this.boardSize=10,this.user=n,this.boardState=Array(this.boardSize*this.boardSize).fill(null),this.board=[],this.currPrevShipIndices=[],this.shipsList=[],this.shipChosen=null,this.lastSavedShip=null,this.initializeBoardPositioning(),this.loadBoardState(),this.shipOptions()}initializeBoardPositioning(){this.renderBoardPlacement(),this.initializeOrientationHandler()}renderBoardPlacement(){const n=document.querySelector(`.${this.user}-board`);for(let e=0;e<this.boardSize*this.boardSize;e++){const t=document.createElement("div");t.classList.add(`${this.user}-cell`,`${this.user}-cell-${e}`),n.appendChild(t)}return"player"===this.user&&document.querySelectorAll(`.${this.user}-cell`).forEach(((n,e)=>{n.addEventListener("mouseover",(()=>{this.shipChosen&&this.previewBoardShip(e,this.shipChosen)})),n.addEventListener("click",(()=>{this.shipChosen&&this.placeChosenShipInBoard(this.shipChosen)}))})),"enemy"===this.user&&this.enemyShipPlacement(),n}enemyShipPlacement(){this.currPrevShipIndices=[],[{name:"Carrier",size:5},{name:"Battleship",size:4},{name:"Destroyer",size:3},{name:"Submarine",size:2}].forEach((n=>{const e=Math.random()>.5?"horizontal":"vertical";console.log(n.name,e);const t=new b(n.name,n.size),i=Math.floor(Math.random()*(this.boardSize*this.boardSize));this.calculateShipPlacement(i,e,t.size)}))}calculateShipPlacement(n,e,t){if("horizontal"===e){let e=n,i=e+t-1;const o=Math.floor(e/this.boardSize)*this.boardSize+this.boardSize-1;i>o&&(i=o,e=i-t+1);for(let n=e;n<=i;n++)this.currPrevShipIndices.push(n)}else if("vertical"===e){let e=n,i=e+(t-1)*this.boardSize;const o=e%this.boardSize;i>=this.boardSize*this.boardSize&&(i=o*(this.boardSize-1)*this.boardSize,e=i-(t-1)*this.boardSize);for(let n=e;n<=i;n+=this.boardSize)this.currPrevShipIndices.push(n)}console.log(this.currPrevShipIndices)}previewBoardShip(n,e){const t=document.querySelectorAll(`.${this.user}-board .${this.user}-cell`);t.forEach((n=>n.classList.remove("ship-preview"))),this.currPrevShipIndices=[];const i=Math.floor(n/this.boardSize)*this.boardSize,o=i+this.boardSize-1;"horizontal"===e.orientation?this.previewHorizontal(i,o,e,t,n):this.previewVertical(n,e,t)}previewHorizontal(n,e,t,i,o){const r=Math.floor(t.size/2);let a=o-r,s=o+r;if(t.size%2!=0){a<n&&(a=n,s=a+t.size-1),s>e&&(s=e,a=s-t.size+1);for(let n=a;n<=s;n++)i[n]&&(i[n].classList.add("ship-preview"),this.currPrevShipIndices.push(n))}else if(t.size%2==0){let r=o,a=o+t.size-1;r<n&&(r=n,a=r+t.size-1),a>e&&(a=e,r=a-t.size+1);for(let n=r;n<=a;n++)i[n]&&(i[n].classList.add("ship-preview"),this.currPrevShipIndices.push(n))}}previewVertical(n,e,t){const i=n%this.boardSize;let o=n-i+i-Math.floor(e.size/2)*this.boardSize,r=o+(e.size-1)*this.boardSize;o<0&&(o=i,r=o+(e.size-1)*this.boardSize),r>=this.boardSize*this.boardSize&&(r=i+(this.boardSize-1)*this.boardSize,o=r-(e.size-1)*this.boardSize);for(let n=o;n<=r;n+=this.boardSize)t[n]&&(t[n].classList.add("ship-preview"),this.currPrevShipIndices.push(n))}toggleChangeOrientation(n){"horizontal"===n.orientation?n.orientation="vertical":"vertical"===n.orientation&&(n.orientation="horizontal")}initializeOrientationHandler(){"player"===this.user&&document.querySelector(".rotate-btn").addEventListener("click",(()=>{this.shipChosen&&(this.toggleChangeOrientation(this.shipChosen),this.previewBoardShip(this.shipChosen.currentIndex,this.shipChosen))}))}shipOptions(){const n=document.querySelector(".ship-options"),e=document.querySelector(".ship-chosen-msg"),t=n.children;if(Array.from(t).forEach((n=>{n.addEventListener("click",(()=>{this.lastSavedShip&&this.lastSavedShip.classList.remove("ship-chosen"),n.classList.add("ship-chosen"),this.shipChosen={name:n.getAttribute("data-name"),size:parseInt(n.getAttribute("data-size"),10),orientation:n.getAttribute("data-orientation")},e.innerText=`${this.shipChosen.name} selected`,this.lastSavedShip=n}))})),t.length>0){const n=t[0];this.lastSavedShip&&this.lastSavedShip.classList.remove("ship-chosen"),n.classList.add("ship-chosen"),this.shipChosen={name:n.getAttribute("data-name"),size:parseInt(n.getAttribute("data-size"),10),orientation:n.getAttribute("data-orientation")},e.innerText=`${this.shipChosen.name} selected`,this.lastSavedShip=n}}isPlacementValid(n){const{position:e}=n,t=e.every((n=>n>=0&&n<this.boardSize*this.boardSize&&null===this.boardState[n])),i=this.shipsList.some((e=>e.name===n.name));return t&&!i}placeChosenShipInBoard(n){if(!n)return;const e=new b(n.name,n.size);e.position=[...this.currPrevShipIndices],this.isPlacementValid(e)?(this.currPrevShipIndices.forEach((n=>{this.boardState[n]=e.name,document.querySelector(`.${this.user}-board .${this.user}-cell-${n}`).classList.add(`${e.name}`),document.querySelector(".notification-msg").innerText=`${e.name} deployed!`})),this.shipsList.push(e)):document.querySelector(".notification-msg").innerText=`${e.name} placement is invalid.`,this.askGameStart()}askGameStart(){4===this.shipsList.length&&(document.querySelector(".notification-msg").innerText="Full Steam Ahead!",document.querySelector(".start-game-modal").style.display="block",this.saveBoardState())}saveBoardState(){localStorage.setItem(`${this.user}-boardState`,JSON.stringify(this.boardState)),localStorage.setItem(`${this.user}-shipsList`,JSON.stringify(this.shipsList))}loadBoardState(){const n=localStorage.getItem(`${this.user}-boardState`),e=localStorage.getItem(`${this.user}-shipsList`);return null!==n&&(this.boardState=JSON.parse(n)),null!==e&&(this.shipsList=JSON.parse(e)),{boardState:this.boardState,shipsList:this.shipsList}}}var g=t(373);!function(){!function(){const n=document.querySelector("main"),e=document.createElement("div");e.classList.add("landing-frame"),e.innerHTML='<h1>Battle Ship⛴</h2>\n  <button class="play-button">Play</button>',n.appendChild(e)}();const n=document.querySelector("main");document.querySelector(".play-button").addEventListener("click",(()=>{n.innerHTML="",function(){const n=document.querySelector("main"),e=document.createElement("div");e.classList.add("setupboard-frame"),e.innerHTML=`<div class="player-board-container">\n        <h1>Player Board</h1>\n        <div class="notif-btn-container">\n          <h3 class="notification-msg">Captain our ships are ready to be setup!</h3> \n          <img src="${m}" alt="Rotate Button" class="rotate-btn">\n        </div>\n        <div class="player-board"></div>\n        <div class="enemy-board"></div>\n      </div>\n      <div class="ship-options-container">\n        <h1>Ship Options</h1>\n        <div>\n          <h3 class="ship-chosen-msg"></h3>\n        </div>\n        <div class="ship-options">\n          <div\n            class="carrier-preview"\n            data-name="Carrier"\n            data-size="5"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="battleship-preview"\n            data-name="Battleship"\n            data-size="4"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="destroyer-preview"\n            data-name="Destroyer"\n            data-size="3"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="submarine-preview"\n            data-name="Submarine"\n            data-size="2"\n            data-orientation="horizontal"\n          ></div>\n        </div>\n      </div>\n      `;const t=document.createElement("div");t.classList.add("start-game-modal"),t.innerHTML='<div class="start-game-modal-content">\n      <h1 class="start-game-title">Awaiting Your Orders Captain</h1>\n      <button class="start-game-button">Fire</button>\n  </div>',n.appendChild(e),n.appendChild(t)}();const e=new C("player");new C("enemy"),document.querySelector(".start-game-button").addEventListener("click",(()=>{n.innerHTML="",function(){const n=document.querySelector("main"),e=document.createElement("div");e.classList.add("game-frame"),e.innerHTML='<div class="player-board-container">\n        <div>\n          <h1>Allied Waters</h1>\n        </div>\n        <div class="player-board"></div>\n      </div>\n      <div class="ship-options-container">\n        <h1>Enemies Waters</h1>\n      </div>\n     ',n.appendChild(e)}();const t=new g.Gameplay(e.loadBoardState);console.log(t)}))}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,