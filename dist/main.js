(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>p});var r=t(354),o=t.n(r),i=t(314),a=t.n(i),s=t(417),A=t.n(s),c=new URL(t(233),t.b),l=a()(o());l.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Notable&display=swap);"]),l.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Anton+SC&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Noto+Sans+Symbols:wght@100..900&display=swap);"]);var d=A()(c);l.push([n.id,`*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n\nli {\n  list-style: none;\n}\n\nhtml {\n  font-family: 'Montserrat', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\nhtml,\nbody {\n  height: 100vh;\n}\n\n\nbody {\n  background-image: url(${d});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.landing-frame {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n\n.landing-frame>h1 {\n  font-size: 6rem;\n  font-style: italic;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  margin-bottom: 50px;\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n}\n\n@keyframes moveUpDown {\n  0% {\n    transform: translateY(0);\n  }\n\n  50% {\n    transform: translateY(-20px);\n  }\n\n  100% {\n    transform: translateY(0);\n  }\n}\n\n.start-button {\n  width: 350px;\n  font-size: 3rem;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-bottom-right-radius: 40%;\n  border-bottom-left-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.start-button:hover {\n  background-color: rgba(0, 0, 0, 0.5);\n  border-bottom-right-radius: 40%;\n  border-bottom-left-radius: 40%;\n\n}\n\n.setupboard-frame {\n  display: flex;\n  flex-direction: row;\n}\n\n.player-board {\n  width: 500px;\n  height: 500px;\n  background-color: white;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.ship-options {\n  width: 500px;\n  height: 500px;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.enemy-board-container {\n  display: none;\n}\n\n.cell {\n  width: 50px;\n  height: 50px;\n  border: 1px solid black;\n  box-sizing: border-box;\n}\n\n\n.ship-chosen {\n  border: 2px solid white;\n}\n\n.carrier-preview {\n  width: 250px;\n  height: 50px;\n  background-color: red;\n}\n\n.battleship-preview {\n  width: 200px;\n  height: 50px;\n  background-color: orange;\n}\n\n.destroyer-preview {\n  width: 150px;\n  height: 50px;\n  background-color: yellow;\n}\n\n.submarine-preview {\n  width: 100px;\n  height: 50px;\n  background-color: green;\n}\n\n.ship-preview {\n  background-color: rgba(0, 128, 255, 0.5);\n}\n\n.carrier {\n  background-color: red;\n}\n\n.battleship {\n  background-color: orange;\n}\n\n.destroyer {\n  background-color: yellow;\n}\n\n.submarine {\n  background-color: green;\n}\n\n.player-board-container>div:first-child {\n  display: flex;\n  gap: 50px;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAMA;;EAEE,sBAAsB;AACxB;;AAEA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,gBAAgB;EAChB,mCAAmC;AACrC;;AAEA;;;;;EAKE,cAAc;EACd,eAAe;AACjB;;AAEA;;;;EAIE,aAAa;AACf;;AAEA;;;;;;;EAOE,yBAAyB;AAC3B;;AAEA;;EAEE,kBAAkB;AACpB;;;AAGA;EACE,gBAAgB;AAClB;;AAEA;EACE;AACF;;AAEA;;EAEE,aAAa;AACf;;;AAGA;EACE,yDAAwC;EACxC,sBAAsB;EACtB,4BAA4B;EAC5B,2BAA2B;EAC3B,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;;AAGA;EACE,aAAa;EACb,uBAAuB;EACvB,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,2CAA2C;EAC3C,uBAAuB;EACvB,mBAAmB;EACnB,2CAA2C;AAC7C;;AAEA;EACE;IACE,wBAAwB;EAC1B;;EAEA;IACE,4BAA4B;EAC9B;;EAEA;IACE,wBAAwB;EAC1B;AACF;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,oCAAoC;EACpC,+BAA+B;EAC/B,8BAA8B;EAC9B,YAAY;EACZ,YAAY;EACZ,6CAA6C;AAC/C;;AAEA;EACE,oCAAoC;EACpC,+BAA+B;EAC/B,8BAA8B;;AAEhC;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,oCAAoC;EACpC,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,uBAAuB;EACvB,mBAAmB;AACrB;;;AAGA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,sBAAsB;AACxB;;;AAGA;EACE,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,qBAAqB;AACvB;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,wBAAwB;AAC1B;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,wBAAwB;AAC1B;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,uBAAuB;AACzB;;AAEA;EACE,wCAAwC;AAC1C;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,SAAS;AACX",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Notable&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Anton+SC&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Noto+Sans+Symbols:wght@100..900&display=swap');\n\n\n\n\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n\nli {\n  list-style: none;\n}\n\nhtml {\n  font-family: 'Montserrat', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\nhtml,\nbody {\n  height: 100vh;\n}\n\n\nbody {\n  background-image: url(\"img/bg-img.webp\");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.landing-frame {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n\n.landing-frame>h1 {\n  font-size: 6rem;\n  font-style: italic;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  margin-bottom: 50px;\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n}\n\n@keyframes moveUpDown {\n  0% {\n    transform: translateY(0);\n  }\n\n  50% {\n    transform: translateY(-20px);\n  }\n\n  100% {\n    transform: translateY(0);\n  }\n}\n\n.start-button {\n  width: 350px;\n  font-size: 3rem;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-bottom-right-radius: 40%;\n  border-bottom-left-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.start-button:hover {\n  background-color: rgba(0, 0, 0, 0.5);\n  border-bottom-right-radius: 40%;\n  border-bottom-left-radius: 40%;\n\n}\n\n.setupboard-frame {\n  display: flex;\n  flex-direction: row;\n}\n\n.player-board {\n  width: 500px;\n  height: 500px;\n  background-color: white;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.ship-options {\n  width: 500px;\n  height: 500px;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.enemy-board-container {\n  display: none;\n}\n\n.cell {\n  width: 50px;\n  height: 50px;\n  border: 1px solid black;\n  box-sizing: border-box;\n}\n\n\n.ship-chosen {\n  border: 2px solid white;\n}\n\n.carrier-preview {\n  width: 250px;\n  height: 50px;\n  background-color: red;\n}\n\n.battleship-preview {\n  width: 200px;\n  height: 50px;\n  background-color: orange;\n}\n\n.destroyer-preview {\n  width: 150px;\n  height: 50px;\n  background-color: yellow;\n}\n\n.submarine-preview {\n  width: 100px;\n  height: 50px;\n  background-color: green;\n}\n\n.ship-preview {\n  background-color: rgba(0, 128, 255, 0.5);\n}\n\n.carrier {\n  background-color: red;\n}\n\n.battleship {\n  background-color: orange;\n}\n\n.destroyer {\n  background-color: yellow;\n}\n\n.submarine {\n  background-color: green;\n}\n\n.player-board-container>div:first-child {\n  display: flex;\n  gap: 50px;\n}"],sourceRoot:""}]);const p=l},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],s=0;s<n.length;s++){var A=n[s],c=r.base?A[0]+r.base:A[0],l=i[c]||0,d="".concat(c," ").concat(l);i[c]=l+1;var p=t(d),h={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(h);else{var u=o(h,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:u,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var A=r(n,o),c=0;c<i.length;c++){var l=t(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=A}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},233:(n,e,t)=>{n.exports=t.p+"img/bg-img.webp"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var r=t(72),o=t.n(r),i=t(825),a=t.n(i),s=t(659),A=t.n(s),c=t(56),l=t.n(c),d=t(540),p=t.n(d),h=t(113),u=t.n(h),b=t(208),m={};m.styleTagTransform=u(),m.setAttributes=l(),m.insert=A().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=p(),o()(b.A,m),b.A&&b.A.locals&&b.A.locals;class f{constructor(n,e){this.name=n,this.size=e,this.hits=0,this.position=[]}isSunk(){if(this.hits===this.size)return!0}hit(){this.hits++}setPosition(n){this.position=n}}let g=null,E=null;function C(){return g}class v{constructor(n){this.boardSize=10,this.user=n,this.boardState=Array(this.boardSize*this.boardSize).fill(null),this.currPrevShipIndices=[],this.shipsList=[],this.initializeBoardPositioning(),this.loadBoardState()}initializeBoardPositioning(){this.renderBoard(),this.initializeOrientationHandler()}renderBoard(){const n=document.querySelector(`.${this.user}-board`);for(let e=0;e<this.boardSize*this.boardSize;e++){const t=document.createElement("div");t.classList.add(`cell-${e}`,"cell"),n.appendChild(t)}return document.querySelectorAll(`.${this.user}-board .cell`).forEach(((n,e)=>{n.addEventListener("mouseover",(()=>{let n=C();const t=e;this.previewBoardShip(t,n)})),n.addEventListener("click",(()=>{let n=C();this.placeChosenShipInBoard(n)}))})),n}previewBoardShip(n,e){const t=document.querySelectorAll(`.${this.user}-board .cell`);t.forEach((n=>n.classList.remove("ship-preview"))),this.currPrevShipIndices=[];const r=Math.floor(n/this.boardSize)*this.boardSize,o=r+this.boardSize-1;"horizontal"===e.orientation?this.previewHorizontal(r,o,e,t,n):this.previewVertical(n,e,t)}previewHorizontal(n,e,t,r,o){const i=Math.floor(t.size/2);let a=o-i,s=o+i;if(t.size%2!=0){a<n&&(a=n,s=a+t.size-1),s>e&&(s=e,a=s-t.size+1);for(let n=a;n<=s;n++)r[n]&&(r[n].classList.add("ship-preview"),this.currPrevShipIndices.push(n))}else if(t.size%2==0){let i=o,a=o+t.size-1;i<n&&(i=n,a=i+t.size-1),a>e&&(a=e,i=a-t.size+1);for(let n=i;n<=a;n++)r[n]&&(r[n].classList.add("ship-preview"),this.currPrevShipIndices.push(n))}}previewVertical(n,e,t){const r=n%this.boardSize;let o=n-r+r-Math.floor(e.size/2)*this.boardSize,i=o+(e.size-1)*this.boardSize;o<0&&(o=r,i=o+(e.size-1)*this.boardSize),i>=this.boardSize*this.boardSize&&(i=r+(this.boardSize-1)*this.boardSize,o=i-(e.size-1)*this.boardSize);for(let n=o;n<=i;n+=this.boardSize)t[n]&&(t[n].classList.add("ship-preview"),this.currPrevShipIndices.push(n))}toggleChangeOrientation(n){"horizontal"===n.orientation?n.orientation="vertical":"vertical"===n.orientation&&(n.orientation="horizontal")}initializeOrientationHandler(){document.querySelector(".change-orientation-btn").addEventListener("click",(()=>{const n=C();n&&(this.toggleChangeOrientation(n),this.previewBoardShip(n.currentIndex,n))}))}placeChosenShipInBoard(n){const e=new f(n.name,n.size);e.position=[...this.currPrevShipIndices],this.shipsList.some((n=>n.name===e.name))?console.log("ship already added"):(this.currPrevShipIndices.forEach((n=>{this.boardState[n]=e.name,document.querySelector(`.${this.user}-board .cell-${n}`).classList.add(`${e.name}`)})),this.shipsList.push(e)),console.log(this.shipsList),this.askGameStart()}askGameStart(){4===this.shipsList.length&&(console.log("start game?"),this.saveBoardState())}saveBoardState(){localStorage.setItem(`${this.user}-boardState`,JSON.stringify(this.boardState))}loadBoardState(){const n=localStorage.getItem(`${this.user}-boardState`);n&&(this.boardState=JSON.parse(n))}}!function(){const n=document.querySelector("main"),e=document.createElement("div");e.classList.add("landing-frame"),e.innerHTML='<h1>Battle Ship⛴</h2>\n  <button class="start-button">All Aboard</button>',n.appendChild(e)}(),document.querySelector(".start-button").addEventListener("click",(()=>{document.querySelector("main").innerHTML="",function(){const n=document.querySelector("main"),e=document.createElement("div");e.classList.add("setupboard-frame"),e.innerHTML='<div class="player-board-container">\n        <div>\n          <h1>Player Board</h1>\n          <button class="change-orientation-btn">Change Orientation</button>\n        </div>\n        <div class="player-board"></div>\n      </div>\n      <div class="ship-options-container">\n        <h1>Ship Options</h1>\n        <div class="ship-options">\n          <div\n            class="carrier-preview"\n            data-name="carrier"\n            data-size="5"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="battleship-preview"\n            data-name="battleship"\n            data-size="4"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="destroyer-preview"\n            data-name="destroyer"\n            data-size="3"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="submarine-preview"\n            data-name="submarine"\n            data-size="2"\n            data-orientation="horizontal"\n          ></div>\n        </div>\n      </div>\n      <div class="enemy-board-container">\n        <h1>Enemy Board</h1>\n        <div class="enemy-board"></div>\n      </div>',n.appendChild(e)}(),new v("player"),function(){const n=document.querySelector(".ship-options").children;if(Array.from(n).forEach((n=>{n.addEventListener("click",(()=>{E&&E.classList.remove("ship-chosen"),n.classList.add("ship-chosen"),g={name:n.getAttribute("data-name"),size:parseInt(n.getAttribute("data-size"),10),orientation:n.getAttribute("data-orientation")},E=n}))})),n.length>0){const e=n[0];E&&E.classList.remove("ship-chosen"),e.classList.add("ship-chosen"),g={name:e.getAttribute("data-name"),size:parseInt(e.getAttribute("data-size"),10),orientation:e.getAttribute("data-orientation")},E=e}}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,