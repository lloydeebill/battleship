(()=>{"use strict";var e={208:(e,n,t)=>{t.d(n,{A:()=>p});var a=t(354),i=t.n(a),r=t(314),o=t.n(r),s=t(417),l=t.n(s),c=new URL(t(233),t.b),d=o()(i());d.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Notable&display=swap);"]),d.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Anton+SC&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Noto+Sans+Symbols:wght@100..900&display=swap);"]);var A=l()(c);d.push([e.id,`*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n\nli {\n  list-style: none;\n}\n\nhtml {\n  font-family: 'Montserrat', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\nhtml,\nbody {\n  height: 100vh;\n}\n\n\nbody {\n  background-image: url(${A});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nmain {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.landing-frame {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n\n.landing-frame>h1 {\n  font-size: 6rem;\n  font-style: italic;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  margin-bottom: 50px;\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  -webkit-text-stroke: 2px black;\n}\n\n@keyframes moveUpDown {\n  0% {\n    transform: translateY(0);\n  }\n\n  50% {\n    transform: translateY(-20px);\n  }\n\n  100% {\n    transform: translateY(0);\n  }\n}\n\n.play-button,\n.multiplay-button {\n  width: 250px;\n  height: 100px;\n  padding-bottom: 10px;\n  font-size: 1.5rem;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-bottom-right-radius: 40%;\n  border-bottom-left-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.play-button:hover,\n.start-game-button:hover,\n.multiplay-button:hover {\n  background-color: rgb(255, 105, 5);\n  color: black;\n  cursor: pointer;\n}\n\n.setupboard-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n}\n\n.player-board,\n.enemy-board,\n.player1-board,\n.player2-board,\n.player1-board-attack,\n.player2-board-attack {\n  width: 500px;\n  height: 500px;\n  background-color: white;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.player1-board-container,\n.player2-board-container {\n  display: flex;\n\n}\n\n.player-board-container {\n  displaY: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.enemy-board-game-container {\n  displaY: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.ship-options-container {\n  display: flex;\n  flex-direction: column;\n  gap: 15px\n}\n\n.enemy-board-container {\n  display: none;\n}\n\n.rotate-btn,\n.player1-rotate-btn,\n.player2-rotate-btn {\n  width: 40px;\n  height: 40px;\n}\n\n.rotate-btn:hover,\n.player1-rotate-btn:hover,\n.player2-rotate-btn:hover {\n  position: relative;\n  cursor: pointer;\n  bottom: 5px;\n}\n\n.player-ship-options,\n.player1-ship-options,\n.player2-ship-options {\n  width: 500px;\n  height: 500px;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  justify-content: center;\n  align-items: center;\n}\n\n.notification-msg,\n.player1-notification-msg,\n.player2-notification-msg {\n  color: black;\n}\n\n.enemy-cell,\n.player-cell,\n.player1-cell,\n.player2-cell,\n.player1-cell-attack,\n.player2-cell-attack {\n  width: 50px;\n  height: 50px;\n  border: 1px solid black;\n  box-sizing: border-box;\n}\n\n.player1-view,\n.player2-view {\n  display: flex;\n  flex-direction: row;\n\n}\n\n\n.ship-chosen {\n  border: 2px solid white;\n}\n\n.carrier-preview {\n  width: 250px;\n  height: 50px;\n  background-color: violet;\n}\n\n.battleship-preview {\n  width: 200px;\n  height: 50px;\n  background-color: orange;\n}\n\n.destroyer-preview {\n  width: 150px;\n  height: 50px;\n  background-color: yellow;\n}\n\n.submarine-preview {\n  width: 100px;\n  height: 50px;\n  background-color: green;\n}\n\n.ship-preview {\n  background-color: rgba(0, 128, 255, 0.5);\n}\n\n.Carrier {\n  background-color: violet;\n}\n\n.Battleship {\n  background-color: orange;\n}\n\n.Destroyer {\n  background-color: yellow;\n}\n\n.Submarine {\n  background-color: green;\n}\n\n.enemy-ship {\n  background-color: white;\n}\n\n\n.notif-btn-container {\n  display: flex;\n  align-items: center;\n  gap: 30px;\n}\n\n.start-game-modal {\n  display: none;\n  z-index: 1;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: black;\n}\n\n\n.start-game-modal-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 10%;\n  width: 100%;\n  height: 80%;\n}\n\n.start-game-title {\n  font-size: 4rem;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  margin-bottom: 50px;\n  -webkit-text-stroke: 2px black;\n}\n\n.start-game-button {\n  width: 250px;\n  font-size: 2.5rem;\n  padding-bottom: 15px;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-top-right-radius: 40%;\n  border-bottom-right-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.game-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 100px;\n}\n\n.damage {\n  background-color: red;\n}\n\n.missed {\n  background-color: black;\n}\n\n.game-over-modal {\n  display: none;\n  z-index: 1;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.game-over-modal-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 10%;\n  width: 100%;\n  height: 80%;\n}\n\n.game-over-title {\n  font-size: 4rem;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  margin-bottom: 50px;\n  -webkit-text-stroke: 2px black;\n}\n\n.hidden {\n  display: none;\n}\n\n.visible {\n  display: block;\n\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Notable&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Anton+SC&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Noto+Sans+Symbols:wght@100..900&display=swap');\n\n\n\n\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n\nli {\n  list-style: none;\n}\n\nhtml {\n  font-family: 'Montserrat', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\nhtml,\nbody {\n  height: 100vh;\n}\n\n\nbody {\n  background-image: url(\"img/bg-img.webp\");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nmain {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.landing-frame {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n\n.landing-frame>h1 {\n  font-size: 6rem;\n  font-style: italic;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  margin-bottom: 50px;\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  -webkit-text-stroke: 2px black;\n}\n\n@keyframes moveUpDown {\n  0% {\n    transform: translateY(0);\n  }\n\n  50% {\n    transform: translateY(-20px);\n  }\n\n  100% {\n    transform: translateY(0);\n  }\n}\n\n.play-button,\n.multiplay-button {\n  width: 250px;\n  height: 100px;\n  padding-bottom: 10px;\n  font-size: 1.5rem;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-bottom-right-radius: 40%;\n  border-bottom-left-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.play-button:hover,\n.start-game-button:hover,\n.multiplay-button:hover {\n  background-color: rgb(255, 105, 5);\n  color: black;\n  cursor: pointer;\n}\n\n.setupboard-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n}\n\n.player-board,\n.enemy-board,\n.player1-board,\n.player2-board,\n.player1-board-attack,\n.player2-board-attack {\n  width: 500px;\n  height: 500px;\n  background-color: white;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.player1-board-container,\n.player2-board-container {\n  display: flex;\n\n}\n\n.player-board-container {\n  displaY: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.enemy-board-game-container {\n  displaY: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.ship-options-container {\n  display: flex;\n  flex-direction: column;\n  gap: 15px\n}\n\n.enemy-board-container {\n  display: none;\n}\n\n.rotate-btn,\n.player1-rotate-btn,\n.player2-rotate-btn {\n  width: 40px;\n  height: 40px;\n}\n\n.rotate-btn:hover,\n.player1-rotate-btn:hover,\n.player2-rotate-btn:hover {\n  position: relative;\n  cursor: pointer;\n  bottom: 5px;\n}\n\n.player-ship-options,\n.player1-ship-options,\n.player2-ship-options {\n  width: 500px;\n  height: 500px;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  justify-content: center;\n  align-items: center;\n}\n\n.notification-msg,\n.player1-notification-msg,\n.player2-notification-msg {\n  color: black;\n}\n\n.enemy-cell,\n.player-cell,\n.player1-cell,\n.player2-cell,\n.player1-cell-attack,\n.player2-cell-attack {\n  width: 50px;\n  height: 50px;\n  border: 1px solid black;\n  box-sizing: border-box;\n}\n\n.player1-view,\n.player2-view {\n  display: flex;\n  flex-direction: row;\n\n}\n\n\n.ship-chosen {\n  border: 2px solid white;\n}\n\n.carrier-preview {\n  width: 250px;\n  height: 50px;\n  background-color: violet;\n}\n\n.battleship-preview {\n  width: 200px;\n  height: 50px;\n  background-color: orange;\n}\n\n.destroyer-preview {\n  width: 150px;\n  height: 50px;\n  background-color: yellow;\n}\n\n.submarine-preview {\n  width: 100px;\n  height: 50px;\n  background-color: green;\n}\n\n.ship-preview {\n  background-color: rgba(0, 128, 255, 0.5);\n}\n\n.Carrier {\n  background-color: violet;\n}\n\n.Battleship {\n  background-color: orange;\n}\n\n.Destroyer {\n  background-color: yellow;\n}\n\n.Submarine {\n  background-color: green;\n}\n\n.enemy-ship {\n  background-color: white;\n}\n\n\n.notif-btn-container {\n  display: flex;\n  align-items: center;\n  gap: 30px;\n}\n\n.start-game-modal {\n  display: none;\n  z-index: 1;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: black;\n}\n\n\n.start-game-modal-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 10%;\n  width: 100%;\n  height: 80%;\n}\n\n.start-game-title {\n  font-size: 4rem;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  margin-bottom: 50px;\n  -webkit-text-stroke: 2px black;\n}\n\n.start-game-button {\n  width: 250px;\n  font-size: 2.5rem;\n  padding-bottom: 15px;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-top-right-radius: 40%;\n  border-bottom-right-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.game-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 100px;\n}\n\n.damage {\n  background-color: red;\n}\n\n.missed {\n  background-color: black;\n}\n\n.game-over-modal {\n  display: none;\n  z-index: 1;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.game-over-modal-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 10%;\n  width: 100%;\n  height: 80%;\n}\n\n.game-over-title {\n  font-size: 4rem;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  margin-bottom: 50px;\n  -webkit-text-stroke: 2px black;\n}\n\n.hidden {\n  display: none;\n}\n\n.visible {\n  display: block;\n\n}"],sourceRoot:""}]);const p=d},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,a,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(a)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(o[l]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);a&&o[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),n.push(d))}},n}},417:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(i," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var r={},o=[],s=0;s<e.length;s++){var l=e[s],c=a.base?l[0]+a.base:l[0],d=r[c]||0,A="".concat(c," ").concat(d);r[c]=d+1;var p=t(A),h={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)n[p].references++,n[p].updater(h);else{var m=i(h,a);a.byIndex=s,n.splice(s,0,{identifier:A,updater:m,references:1})}o.push(A)}return o}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var r=a(e=e||[],i=i||{});return function(e){e=e||[];for(var o=0;o<r.length;o++){var s=t(r[o]);n[s].references--}for(var l=a(e,i),c=0;c<r.length;c++){var d=t(r[c]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}r=l}}},659:e=>{var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,i&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},233:(e,n,t)=>{e.exports=t.p+"img/bg-img.webp"}},n={};function t(a){var i=n[a];if(void 0!==i)return i.exports;var r=n[a]={id:a,exports:{}};return e[a](r,r.exports,t),r.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var i=a.length-1;i>-1&&(!e||!/^http(s?):/.test(e));)e=a[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var a=t(72),i=t.n(a),r=t(825),o=t.n(r),s=t(659),l=t.n(s),c=t(56),d=t.n(c),A=t(540),p=t.n(A),h=t(113),m=t.n(h),u=t(208),y={};y.styleTagTransform=m(),y.setAttributes=d(),y.insert=l().bind(null,"head"),y.domAPI=o(),y.insertStyleElement=p(),i()(u.A,y),u.A&&u.A.locals&&u.A.locals;const b=t.p+"img/rotate.svg";class v{constructor(e,n){this.name=e,this.size=n,this.hits=0,this.position=[],this.destroyed=!1}isSunk(){this.hits===this.size&&(console.log(`${this.name} is sunk`),this.destroyed=!0)}hit(){this.hits++,this.isSunk()}setPosition(e){this.position=e}}class g{constructor(e){this.boardSize=10,this.user=e,this.boardState=Array(this.boardSize*this.boardSize).fill(null),this.board=[],this.currPrevShipIndices=[],this.shipsList=[],this.shipChosen=null,this.lastSavedShip=null,this.initializeBoardPositioning(),this.loadBoardState(),this.shipOptions(),console.log(`this.user: ${this.user}`)}initializeBoardPositioning(){this.renderBoardPlacement(),this.initializeOrientationHandler(),"enemy"===this.user&&this.hideEnemyBoard()}renderBoardPlacement(){const e=document.querySelector(`.${this.user}-board`);for(let n=0;n<this.boardSize*this.boardSize;n++){const t=document.createElement("div");t.classList.add(`${this.user}-cell`,`${this.user}-cell-${n}`),e.appendChild(t)}return"player"!==this.user&&"player1"!==this.user&&"player2"!==this.user||document.querySelectorAll(`.${this.user}-cell`).forEach(((e,n)=>{e.addEventListener("mouseover",(()=>{this.shipChosen&&this.previewBoardShip(n,this.shipChosen)})),e.addEventListener("click",(()=>{this.shipChosen&&this.placeChosenShipInBoard(this.shipChosen)}))})),"enemy"===this.user&&this.enemyShipPlacement(),e}enemyShipPlacement(){this.currPrevShipIndices=[],[{name:"Carrier",size:5},{name:"Battleship",size:4},{name:"Destroyer",size:3},{name:"Submarine",size:2}].forEach((e=>{let n=!1;for(;!n;){const t=Math.random()>.5?"horizontal":"vertical",a=Math.floor(Math.random()*(this.boardSize*this.boardSize));this.currPrevShipIndices=[],this.calculateShipPlacement(a,t,e.size),e.position=[...this.currPrevShipIndices],this.isPlacementValid(e)&&(this.placeChosenShipInBoard(e),n=!0)}}))}calculateShipPlacement(e,n,t){if("horizontal"===n){let n=e,a=n+t-1;const i=Math.floor(n/this.boardSize)*this.boardSize+this.boardSize-1;a>i&&(a=i,n=a-t+1);for(let e=n;e<=a;e++)this.currPrevShipIndices.push(e)}else if("vertical"===n){let n=e,a=n+(t-1)*this.boardSize;const i=n%this.boardSize;a>=this.boardSize*this.boardSize&&(a=i+(this.boardSize-1)*this.boardSize,n=a-(t-1)*this.boardSize);for(let e=n;e<=a;e+=this.boardSize)this.currPrevShipIndices.push(e)}}hideEnemyBoard(){document.querySelector(`.${this.user}-board`).style.display="none"}previewBoardShip(e,n){const t=document.querySelectorAll(`.${this.user}-board .${this.user}-cell`);t.forEach((e=>e.classList.remove("ship-preview"))),this.currPrevShipIndices=[];const a=Math.floor(e/this.boardSize)*this.boardSize,i=a+this.boardSize-1;"horizontal"===n.orientation?this.previewHorizontal(a,i,n,t,e):this.previewVertical(e,n,t)}previewHorizontal(e,n,t,a,i){const r=Math.floor(t.size/2);let o=i-r,s=i+r;if(t.size%2!=0){o<e&&(o=e,s=o+t.size-1),s>n&&(s=n,o=s-t.size+1);for(let e=o;e<=s;e++)a[e]&&(a[e].classList.add("ship-preview"),this.currPrevShipIndices.push(e))}else if(t.size%2==0){let r=i,o=i+t.size-1;r<e&&(r=e,o=r+t.size-1),o>n&&(o=n,r=o-t.size+1);for(let e=r;e<=o;e++)a[e]&&(a[e].classList.add("ship-preview"),this.currPrevShipIndices.push(e))}}previewVertical(e,n,t){const a=e%this.boardSize;let i=e-a+a-Math.floor(n.size/2)*this.boardSize,r=i+(n.size-1)*this.boardSize;i<0&&(i=a,r=i+(n.size-1)*this.boardSize),r>=this.boardSize*this.boardSize&&(r=a+(this.boardSize-1)*this.boardSize,i=r-(n.size-1)*this.boardSize);for(let e=i;e<=r;e+=this.boardSize)t[e]&&(t[e].classList.add("ship-preview"),this.currPrevShipIndices.push(e))}toggleChangeOrientation(e){"horizontal"===e.orientation?e.orientation="vertical":"vertical"===e.orientation&&(e.orientation="horizontal")}initializeOrientationHandler(){"player"!==this.user&&"player1"!==this.user&&"player2"!==this.user||document.querySelector(`.${this.user}-rotate-btn`).addEventListener("click",(()=>{this.shipChosen&&(this.toggleChangeOrientation(this.shipChosen),this.previewBoardShip(this.shipChosen.currentIndex,this.shipChosen))}))}shipOptions(){if("enemy"===this.user)return;const e=document.querySelector(`.${this.user}-ship-options`),n=document.querySelector(`.${this.user}-ship-chosen-msg`),t=e.children;if(Array.from(t).forEach((e=>{e.addEventListener("click",(()=>{this.lastSavedShip&&this.lastSavedShip.classList.remove("ship-chosen"),e.classList.add("ship-chosen"),this.shipChosen={name:e.getAttribute("data-name"),size:parseInt(e.getAttribute("data-size"),10),orientation:e.getAttribute("data-orientation")},n.innerText=`${this.shipChosen.name} selected`,this.lastSavedShip=e}))})),t.length>0){const e=t[0];this.lastSavedShip&&this.lastSavedShip.classList.remove("ship-chosen"),e.classList.add("ship-chosen"),this.shipChosen={name:e.getAttribute("data-name"),size:parseInt(e.getAttribute("data-size"),10),orientation:e.getAttribute("data-orientation")},n.innerText=`${this.shipChosen.name} selected`,this.lastSavedShip=e}}isPlacementValid(e){const{position:n}=e,t=n.every((e=>e>=0&&e<this.boardSize*this.boardSize&&null===this.boardState[e])),a=this.shipsList.some((n=>n.name===e.name));return t&&!a}placeChosenShipInBoard(e){if(!e)return;const n=new v(e.name,e.size,this.user);n.position=[...this.currPrevShipIndices];const t=document.querySelector(`.${this.user}-notification-msg`);if("player"===this.user||"player1"===this.user||"player2"===this.user){if(this.isPlacementValid(n))this.currPrevShipIndices.forEach((e=>{this.boardState[e]=n.name,document.querySelector(`.${this.user}-board .${this.user}-cell-${e}`).classList.add(`${n.name}`)})),this.shipsList.push(n),t.innerText=`${n.name} deployed Captain!`;else{const e=this.shipsList.some((e=>e.name===n.name));t.innerText=e?"Ship already in position Captain.":`Invalid position for ${n.name} Captain.`}"player"===this.user&&this.askGameStart()}else"enemy"===this.user&&(this.isPlacementValid(n)&&(this.currPrevShipIndices.forEach((e=>{this.boardState[e]=n.name,document.querySelector(`.${this.user}-board .${this.user}-cell-${e}`).classList.add(`${n.name}`)})),this.shipsList.push(n)),this.saveBoardState())}askGameStart(){4===this.shipsList.length&&(document.querySelector(`.${this.user}-notification-msg`).innerText="Full Steam Ahead!",document.querySelector(".start-game-modal").style.display="block"),this.saveBoardState()}saveBoardState(){localStorage.setItem(`${this.user}-boardState`,JSON.stringify(this.boardState));const e=this.shipsList.map((e=>({name:e.name,size:e.size,user:e.user})));localStorage.setItem(`${this.user}-shipsList`,JSON.stringify(e))}loadBoardState(){const e=localStorage.getItem(`${this.user}-boardState`);return null!==e&&(this.boardState=JSON.parse(e)),this.boardState}loadShipsList(){const e=localStorage.getItem(`${this.user}-shipsList`);return null!==e&&(this.shipsList=JSON.parse(e).map((e=>new v(e.name,e.size,e.user)))),this.shipsList}}class E{constructor(e,n,t,a){this.playerBoardState=e,this.playerShipsList=n,this.enemyBoardState=t,this.enemyShipsList=a,this.isPlayerTurn=!0,this.gameOverFlag=!1,this.availableEnemytoPlayerMoves=Array.from({length:e.length},((e,n)=>n)),this.initializeGamePlay()}initializeGamePlay(){this.playGame()}playGame(){this.populateBoards(),this.playerMove()}populateBoards(){const e=document.querySelector(".player-board"),n=document.querySelector(".enemy-board");this.playerBoardState.forEach(((n,t)=>{const a=document.createElement("div");a.classList.add("player-cell"),null===n?(a.classList.add(`player-cell-${t}`),a.classList.add(`empty-cell-${t}`)):a.classList.add(n),e.appendChild(a)})),this.enemyBoardState.forEach(((e,t)=>{const a=document.createElement("div");a.classList.add("enemy-cell"),null===e?(a.classList.add(`enemy-cell-${t}`),a.classList.add(`empty-cell-${t}`)):(a.classList.add(e),a.classList.add("enemy-ship")),n.appendChild(a)}))}listenToAttacks(e){const n=document.querySelectorAll(`.${e}-cell`);"enemy"===e&&n.forEach((e=>{e.addEventListener("click",(()=>{this.isPlayerTurn&&(e.classList.contains("damage")||e.classList.contains("missed")||(this.attackFire("player",e),this.endTurn()))}),{once:!0})}))}attackFire(e,n){["Carrier","Battleship","Destroyer","Submarine"].some((t=>!!n.classList.contains(t)&&(n.classList.remove(t),n.classList.add("damage"),this.hitTracker(t,e),this.checkGameStatus(),!0)))||n.classList.add("missed")}successfulAttack(){console.log("Successful attack captain, one of their ship is damaged")}failedAttack(){console.log("Our attacks have missed Captain")}playerMove(){this.listenToAttacks("enemy")}enemyMove(){const e=this.enemyRandomAttack();this.enemyAttack(e)}enemyRandomAttack(){const e=Math.floor(Math.random()*this.availableEnemytoPlayerMoves.length);return this.availableEnemytoPlayerMoves[e]}enemyAttack(e){const n=document.querySelectorAll(".player-cell");if(e<=n.length){const t=n[e];t.classList.contains("damage")||t.classList.contains("missed")?setTimeout((()=>{this.enemyMove()}),250):(this.attackFire("enemy",t),this.availableEnemytoPlayerMoves=this.availableEnemytoPlayerMoves.filter((n=>n!==e)),this.endTurn())}}endTurn(){this.gameOverFlag||(this.isPlayerTurn=!this.isPlayerTurn,this.isPlayerTurn?this.playerMove():setTimeout((()=>{this.enemyMove()}),500))}hitTracker(e,n){"player"===n&&this.enemyShipsList.forEach((n=>{n.name===e&&n.hit()})),"enemy"===n&&this.playerShipsList.forEach((n=>{n.name===e&&n.hit()}))}checkGameStatus(){const e=this.enemyShipsList.every((e=>!0===e.destroyed)),n=this.playerShipsList.every((e=>!0===e.destroyed));this.gameOver(n,e)}gameOver(e,n){const t=document.querySelector(".game-over-title"),a=document.querySelector(".game-over-modal");n?(t.innerText="You win",this.gameOverFlag=!0,a.style.display="block"):e&&(this.gameOverFlag=!0,t.innerText="Defeated",a.style.display="block")}}class f{constructor(e,n,t,a){this.player1BoardState=e,this.player1ShipsList=n,this.player2BoardState=t,this.player2ShipsList=a,this.isPlayer1Turn=!0,this.gameOverFlag=!1,this.initializeGamePlay()}initializeGamePlay(){this.playGame()}playGame(){this.populateBoards(),this.showPlayer1View(),this.player1Move()}populateBoards(){const e=document.querySelector(".player1-board"),n=document.querySelector(".player2-board"),t=document.querySelector(".player1-board-attack"),a=document.querySelector(".player2-board-attack");this.player1BoardState.forEach(((n,t)=>{const i=document.createElement("div"),r=document.createElement("div");i.classList.add("player1-cell"),r.classList.add("player2-cell-attack"),null===n?(i.classList.add(`player1-cell-${t}`),i.classList.add(`empty-cell-${t}`)):i.classList.add(n),r.classList.add(`player2-cell-attack-${t}`),r.classList.add("empty-cell"),e.appendChild(i),a.appendChild(r)})),this.player2BoardState.forEach(((e,a)=>{const i=document.createElement("div"),r=document.createElement("div");i.classList.add("player2-cell"),r.classList.add("player1-cell-attack"),null===e?(i.classList.add(`player2-cell-${a}`),i.classList.add(`empty-cell-${a}`)):i.classList.add(e),r.classList.add(`player1-cell-attack-${a}`),r.classList.add("empty-cell"),n.appendChild(i),t.appendChild(r)}))}listenToAttacks(e){const n=document.querySelectorAll(`.${e}-cell-attack`);"player2"===e&&this.isPlayer1Turn?n.forEach((n=>{n.addEventListener("click",(()=>{n.classList.contains("damage")||n.classList.contains("missed")||(this.attackFire(e,n),this.endTurn())}),{once:!0})})):"player1"!==e||this.isPlayer1Turn||n.forEach((n=>{n.addEventListener("click",(()=>{n.classList.contains("damage")||n.classList.contains("missed")||(this.attackFire(e,n),this.endTurn())}),{once:!0})}))}showPlayer1View(){document.querySelector(".player1-view").classList.add("visible"),document.querySelector(".player2-view").classList.add("hidden")}showPlayer2View(){document.querySelector(".player1-view").classList.add("hidden"),document.querySelector(".player2-view").classList.add("visible")}player1Move(){this.isPlayer1Turn&&this.listenToAttacks("player2")}player2Move(){this.isPlayer1Turn||this.listenToAttacks("player1")}attackFire(e,n){["Carrier","Battleship","Destroyer","Submarine"].some((t=>!!n.classList.contains(t)&&(n.classList.remove(t),n.classList.add("damage"),this.hitTracker(t,e),this.checkGameStatus(),!0)))||n.classList.add("missed")}endTurn(){this.gameOverFlag||(this.isPlayer1Turn=!this.isPlayer1Turn,this.isPlayer1Turn?(this.showPlayer1View(),this.player1Move()):(this.showPlayer2View(),this.player2Move()))}hitTracker(e,n){console.log(this.player1ShipsList),console.log(this.player2ShipsList),"player1"===n&&this.player1ShipsList.forEach((n=>{n.name===e&&n.hit()})),"player2"===n&&this.player2ShipsList.forEach((n=>{n.name===e&&n.hit()}))}checkGameStatus(){const e=this.player1ShipsList.every((e=>!0===e.destroyed)),n=this.player2ShipsList.every((e=>!0===e.destroyed));this.gameOver(e,n)}gameOver(e,n){const t=document.querySelector(".game-over-title"),a=document.querySelector(".game-over-modal");e?(t.innerText="Player 2 Wins",this.gameOverFlag=!0,a.style.display="block"):n&&(this.gameOverFlag=!0,t.innerText="Player 1 Wins",a.style.display="block")}}function C(){localStorage.removeItem("player1-boardState"),localStorage.removeItem("player1-shipsList"),localStorage.removeItem("player2-boardState"),localStorage.removeItem("player2-shipsList"),localStorage.removeItem("player-boardState"),localStorage.removeItem("player-shipsaList"),localStorage.removeItem("enemy-boardState"),localStorage.removeItem("enemy-shipsList")}function B(){C()}!function e(){const n=document.querySelector("main");B(),function(){const e=document.querySelector("main");e.innerHTML="";const n=document.createElement("div");n.classList.add("landing-frame"),n.innerHTML='<h1>Battle Ship⛴</h2>\n  <div>\n    <button class="play-button">Single Player</button>\n    <button class="multiplay-button">Multi-Player</button>\n  </div>\n',e.appendChild(n)}(),document.querySelector(".play-button").addEventListener("click",(()=>{n.innerHTML="",function(){const e=document.querySelector("main");e.innerHTML="";const n=document.createElement("div");n.classList.add("setupboard-frame"),n.innerHTML=`<div class="player-board-container">\n        <h1>Player Board</h1>\n        <div class="notif-btn-container">\n          <h3 class="player-notification-msg">Captain our ships are ready to be setup!</h3> \n          <img src="${b}" alt="Rotate Button" class="player-rotate-btn">\n        </div>\n        <div class="player-board"></div>\n        <div class="enemy-board"></div>\n      </div>\n      <div class="ship-options-container">\n        <h1>Ship Options</h1>\n        <div>\n          <h3 class="player-ship-chosen-msg"></h3>\n        </div>\n        <div class="player-ship-options">\n          <div\n            class="carrier-preview"\n            data-name="Carrier"\n            data-size="5"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="battleship-preview"\n            data-name="Battleship"\n            data-size="4"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="destroyer-preview"\n            data-name="Destroyer"\n            data-size="3"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="submarine-preview"\n            data-name="Submarine"\n            data-size="2"\n            data-orientation="horizontal"\n          ></div>\n        </div>\n      </div>\n      `;const t=document.createElement("div");t.classList.add("start-game-modal"),t.innerHTML='<div class="start-game-modal-content">\n      <h1 class="start-game-title">Awaiting Your Orders Captain</h1>\n      <button class="start-game-button">Fire</button>\n  </div>',e.appendChild(n),e.appendChild(t)}();const t=new g("player"),a=new g("enemy");document.querySelector(".start-game-button").addEventListener("click",(()=>{n.innerHTML="",function(){const e=document.querySelector("main"),n=document.createElement("div");n.classList.add("game-frame"),n.innerHTML='<div class="player-board-container">\n        <div>\n          <h1>Allied Waters</h1>\n        </div>\n        <div class="player-board"></div>\n      </div>\n      <div class="enemy-board-game-container">\n        <h1>Enemies Waters</h1>\n        <div class="enemy-board"></div>\n      </div>\n     ',e.appendChild(n);const t=document.createElement("div");t.classList.add("game-over-modal"),t.innerHTML='<div class="game-over-modal-content">\n      <h1 class="game-over-title"></h1>\n      <button class="play-again-btn">Play Again</button>\n  </div>',e.appendChild(t)}(),new E(t.loadBoardState(),t.loadShipsList(),a.loadBoardState(),a.loadShipsList()),document.querySelector(".play-again-btn").addEventListener("click",(()=>{C(),B(),e()}))}))})),document.querySelector(".multiplay-button").addEventListener("click",(()=>{n.innerHTML="",function(){const e=document.querySelector("main");e.innerHTML="";const n=document.createElement("div");n.classList.add("setupboard-frame"),n.innerHTML=`<div class="player1-board-container">\n      <div>\n        <h1>Player 1 Board</h1>\n        <div class="notif-btn-container">\n          <h3 class="player1-notification-msg">Captain our ships are ready to be setup!</h3> \n          <img src="${b}" alt="Rotate Button" class="player1-rotate-btn">\n        </div>\n        <div class="player1-board"></div>\n      </div>\n      <div class="ship-options-container">\n        <h1>Ship Options</h1>\n        <div>\n          <h3 class="player1-ship-chosen-msg"></h3>\n        </div>\n        <div class="player1-ship-options">\n          <div\n            class="carrier-preview"\n            data-name="Carrier"\n            data-size="5"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="battleship-preview"\n            data-name="Battleship"\n            data-size="4"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="destroyer-preview"\n            data-name="Destroyer"\n            data-size="3"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="submarine-preview"\n            data-name="Submarine"\n            data-size="2"\n            data-orientation="horizontal"\n          ></div>\n        </div>\n        <button class="player1-ready-button">Ready</button>\n      </div>\n    </div>\n    <div class="player2-board-container">\n      <div>\n        <h1>Player 2 Board</h1>\n        <div class="notif-btn-container">\n          <h3 class="player2-notification-msg">Captain our ships are ready to be setup!</h3> \n          <img src="${b}" alt="Rotate Button" class="player2-rotate-btn">\n        </div>\n        <div class="player2-board"></div>\n      </div>\n      <div class="ship-options-container">\n        <h1>Ship Options</h1>\n        <div>\n          <h3 class="player2-ship-chosen-msg"></h3>\n        </div>\n        <div class="player2-ship-options">\n          <div\n            class="carrier-preview"\n            data-name="Carrier"\n            data-size="5"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="battleship-preview"\n            data-name="Battleship"\n            data-size="4"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="destroyer-preview"\n            data-name="Destroyer"\n            data-size="3"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="submarine-preview"\n            data-name="Submarine"\n            data-size="2"\n            data-orientation="horizontal"\n          ></div>\n        </div>\n        <button class="player2-ready-button">Ready</button>\n      </div>\n    </div>\n      `;const t=document.createElement("div");t.classList.add("start-game-modal"),t.innerHTML='<div class="start-game-modal-content">\n      <h1 class="start-game-title">Awaiting Your Orders Captain</h1>\n      <button class="start-game-button">Fire</button>\n  </div>',e.appendChild(n),e.appendChild(t)}();const t=new g("player1"),a=new g("player2"),i=document.querySelector(".player1-board-container"),r=document.querySelector(".player2-board-container");let o=!1,s=!1;r.style.display="none",document.querySelector(".player1-ready-button").addEventListener("click",(()=>{o=!0,i.style.display="none",r.style.display="flex",t.saveBoardState()})),document.querySelector(".player2-ready-button").addEventListener("click",(()=>{s=!0,a.saveBoardState(),o&&(document.querySelector(".start-game-modal").style.display="block")})),document.querySelector(".start-game-button").addEventListener("click",(()=>{n.innerHTML="",function(){const e=document.querySelector("main"),n=document.createElement("div");n.classList.add("game-frame"),n.innerHTML='\n      <div class="player1-view">\n        <div class="player-board-container">\n          <div>\n            <h1>Allied Waters</h1>\n          </div>\n          <div class="player1-board"></div>\n        </div>\n        <div class="enemy-board-game-container">\n          <h1>Enemies Waters</h1>\n          <div class="player2-board-attack"></div>\n        </div>\n      </div>\n\n      <div class="player2-view">\n        <div class="player2-board-container">\n          <div>\n            <h1>Allied Waters</h1>\n          </div>\n          <div class="player2-board"></div>\n        </div>\n        <div class="enemy-board-game-container">\n          <h1>Enemies Waters</h1>\n          <div class="player1-board-attack"></div>\n        </div>\n      </div>\n\n      \n     ',e.appendChild(n);const t=document.createElement("div");t.classList.add("game-over-modal"),t.innerHTML='<div class="game-over-modal-content">\n      <h1 class="game-over-title"></h1>\n      <button class="play-again-btn">Play Again</button>\n  </div>',e.appendChild(t)}(),new f(t.loadBoardState(),t.loadShipsList(),a.loadBoardState(),a.loadShipsList()),document.querySelector(".play-again-btn").addEventListener("click",(()=>{B(),e()}))}))}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,