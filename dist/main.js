(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>h});var i=t(354),o=t.n(i),a=t(314),r=t.n(a),s=t(417),A=t.n(s),l=new URL(t(233),t.b),c=r()(o());c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Notable&display=swap);"]),c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Anton+SC&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Noto+Sans+Symbols:wght@100..900&display=swap);"]);var d=A()(l);c.push([n.id,`*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n\nli {\n  list-style: none;\n}\n\nhtml {\n  font-family: 'Montserrat', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\nhtml,\nbody {\n  height: 100vh;\n}\n\n\nbody {\n  background-image: url(${d});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nmain {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.landing-frame {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n\n.landing-frame>h1 {\n  font-size: 6rem;\n  font-style: italic;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  margin-bottom: 50px;\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  -webkit-text-stroke: 2px black;\n}\n\n@keyframes moveUpDown {\n  0% {\n    transform: translateY(0);\n  }\n\n  50% {\n    transform: translateY(-20px);\n  }\n\n  100% {\n    transform: translateY(0);\n  }\n}\n\n.play-button {\n  width: 250px;\n  height: 70px;\n  padding-bottom: 10px;\n  font-size: 2.0rem;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-bottom-right-radius: 40%;\n  border-bottom-left-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.play-button:hover,\n.start-game-button:hover {\n  background-color: rgb(255, 105, 5);\n  color: black;\n  cursor: pointer;\n}\n\n.setupboard-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n}\n\n.player-board,\n.enemy-board {\n  width: 500px;\n  height: 500px;\n  background-color: white;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.player-board-container {\n  displaY: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.enemy-board-game-container {\n  displaY: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.ship-options-container {\n  display: flex;\n  flex-direction: column;\n  gap: 15px\n}\n\n.enemy-board-container {\n  display: none;\n}\n\n.rotate-btn {\n  width: 40px;\n  height: 40px;\n}\n\n.rotate-btn:hover {\n  position: relative;\n  cursor: pointer;\n  bottom: 5px;\n}\n\n.ship-options {\n  width: 500px;\n  height: 500px;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  justify-content: center;\n  align-items: center;\n}\n\n.notification-msg {\n  color: black;\n}\n\n.enemy-cell,\n.player-cell {\n  width: 50px;\n  height: 50px;\n  border: 1px solid black;\n  box-sizing: border-box;\n}\n\n\n.ship-chosen {\n  border: 2px solid white;\n}\n\n.carrier-preview {\n  width: 250px;\n  height: 50px;\n  background-color: violet;\n}\n\n.battleship-preview {\n  width: 200px;\n  height: 50px;\n  background-color: orange;\n}\n\n.destroyer-preview {\n  width: 150px;\n  height: 50px;\n  background-color: yellow;\n}\n\n.submarine-preview {\n  width: 100px;\n  height: 50px;\n  background-color: green;\n}\n\n.ship-preview {\n  background-color: rgba(0, 128, 255, 0.5);\n}\n\n.Carrier {\n  background-color: violet;\n}\n\n.Battleship {\n  background-color: orange;\n}\n\n.Destroyer {\n  background-color: yellow;\n}\n\n.Submarine {\n  background-color: green;\n}\n\n.enemy-ship {\n  background-color: white;\n}\n\n\n.notif-btn-container {\n  display: flex;\n  align-items: center;\n  gap: 30px;\n}\n\n.start-game-modal {\n  display: none;\n  z-index: 1;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n\n.start-game-modal-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 10%;\n  width: 100%;\n  height: 80%;\n}\n\n.start-game-title {\n  font-size: 4rem;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  margin-bottom: 50px;\n  -webkit-text-stroke: 2px black;\n}\n\n.start-game-button {\n  width: 250px;\n  font-size: 2.5rem;\n  padding-bottom: 15px;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-top-right-radius: 40%;\n  border-bottom-right-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.game-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 100px;\n}\n\n.damage {\n  background-color: red;\n}\n\n.missed {\n  background-color: black;\n}\n\n.game-over-modal {\n  display: none;\n  z-index: 1;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.game-over-modal-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 10%;\n  width: 100%;\n  height: 80%;\n}\n\n.game-over-title {\n  font-size: 4rem;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  margin-bottom: 50px;\n  -webkit-text-stroke: 2px black;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Notable&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Anton+SC&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Noto+Sans+Symbols:wght@100..900&display=swap');\n\n\n\n\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n\nli {\n  list-style: none;\n}\n\nhtml {\n  font-family: 'Montserrat', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\nhtml,\nbody {\n  height: 100vh;\n}\n\n\nbody {\n  background-image: url(\"img/bg-img.webp\");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nmain {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.landing-frame {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n\n.landing-frame>h1 {\n  font-size: 6rem;\n  font-style: italic;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  margin-bottom: 50px;\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  -webkit-text-stroke: 2px black;\n}\n\n@keyframes moveUpDown {\n  0% {\n    transform: translateY(0);\n  }\n\n  50% {\n    transform: translateY(-20px);\n  }\n\n  100% {\n    transform: translateY(0);\n  }\n}\n\n.play-button {\n  width: 250px;\n  height: 70px;\n  padding-bottom: 10px;\n  font-size: 2.0rem;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-bottom-right-radius: 40%;\n  border-bottom-left-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.play-button:hover,\n.start-game-button:hover {\n  background-color: rgb(255, 105, 5);\n  color: black;\n  cursor: pointer;\n}\n\n.setupboard-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n}\n\n.player-board,\n.enemy-board {\n  width: 500px;\n  height: 500px;\n  background-color: white;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.player-board-container {\n  displaY: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.enemy-board-game-container {\n  displaY: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.ship-options-container {\n  display: flex;\n  flex-direction: column;\n  gap: 15px\n}\n\n.enemy-board-container {\n  display: none;\n}\n\n.rotate-btn {\n  width: 40px;\n  height: 40px;\n}\n\n.rotate-btn:hover {\n  position: relative;\n  cursor: pointer;\n  bottom: 5px;\n}\n\n.ship-options {\n  width: 500px;\n  height: 500px;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  justify-content: center;\n  align-items: center;\n}\n\n.notification-msg {\n  color: black;\n}\n\n.enemy-cell,\n.player-cell {\n  width: 50px;\n  height: 50px;\n  border: 1px solid black;\n  box-sizing: border-box;\n}\n\n\n.ship-chosen {\n  border: 2px solid white;\n}\n\n.carrier-preview {\n  width: 250px;\n  height: 50px;\n  background-color: violet;\n}\n\n.battleship-preview {\n  width: 200px;\n  height: 50px;\n  background-color: orange;\n}\n\n.destroyer-preview {\n  width: 150px;\n  height: 50px;\n  background-color: yellow;\n}\n\n.submarine-preview {\n  width: 100px;\n  height: 50px;\n  background-color: green;\n}\n\n.ship-preview {\n  background-color: rgba(0, 128, 255, 0.5);\n}\n\n.Carrier {\n  background-color: violet;\n}\n\n.Battleship {\n  background-color: orange;\n}\n\n.Destroyer {\n  background-color: yellow;\n}\n\n.Submarine {\n  background-color: green;\n}\n\n.enemy-ship {\n  background-color: white;\n}\n\n\n.notif-btn-container {\n  display: flex;\n  align-items: center;\n  gap: 30px;\n}\n\n.start-game-modal {\n  display: none;\n  z-index: 1;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n\n.start-game-modal-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 10%;\n  width: 100%;\n  height: 80%;\n}\n\n.start-game-title {\n  font-size: 4rem;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  margin-bottom: 50px;\n  -webkit-text-stroke: 2px black;\n}\n\n.start-game-button {\n  width: 250px;\n  font-size: 2.5rem;\n  padding-bottom: 15px;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-top-right-radius: 40%;\n  border-bottom-right-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.game-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 100px;\n}\n\n.damage {\n  background-color: red;\n}\n\n.missed {\n  background-color: black;\n}\n\n.game-over-modal {\n  display: none;\n  z-index: 1;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.game-over-modal-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 10%;\n  width: 100%;\n  height: 80%;\n}\n\n.game-over-title {\n  font-size: 4rem;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  margin-bottom: 50px;\n  -webkit-text-stroke: 2px black;\n}"],sourceRoot:""}]);const h=c},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(i)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(r[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);i&&r[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var a={},r=[],s=0;s<n.length;s++){var A=n[s],l=i.base?A[0]+i.base:A[0],c=a[l]||0,d="".concat(l," ").concat(c);a[l]=c+1;var h=t(d),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==h)e[h].references++,e[h].updater(p);else{var m=o(p,i);i.byIndex=s,e.splice(s,0,{identifier:d,updater:m,references:1})}r.push(d)}return r}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=i(n=n||[],o=o||{});return function(n){n=n||[];for(var r=0;r<a.length;r++){var s=t(a[r]);e[s].references--}for(var A=i(n,o),l=0;l<a.length;l++){var c=t(a[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=A}}},659:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,o&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},233:(n,e,t)=>{n.exports=t.p+"img/bg-img.webp"}},e={};function t(i){var o=e[i];if(void 0!==o)return o.exports;var a=e[i]={id:i,exports:{}};return n[i](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");if(i.length)for(var o=i.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=i[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var i=t(72),o=t.n(i),a=t(825),r=t.n(a),s=t(659),A=t.n(s),l=t(56),c=t.n(l),d=t(540),h=t.n(d),p=t(113),m=t.n(p),u=t(208),b={};b.styleTagTransform=m(),b.setAttributes=c(),b.insert=A().bind(null,"head"),b.domAPI=r(),b.insertStyleElement=h(),o()(u.A,b),u.A&&u.A.locals&&u.A.locals;const C=t.p+"img/rotate.svg";class g{constructor(n,e){this.name=n,this.size=e,this.hits=0,this.position=[],this.destroyed=!1}isSunk(){this.hits===this.size&&(console.log(`${this.name} is sunk`),this.destroyed=!0)}hit(){this.hits++,this.isSunk()}setPosition(n){this.position=n}}class E{constructor(n){this.boardSize=10,this.user=n,this.boardState=Array(this.boardSize*this.boardSize).fill(null),this.board=[],this.currPrevShipIndices=[],this.shipsList=[],this.shipChosen=null,this.lastSavedShip=null,this.initializeBoardPositioning(),this.loadBoardState(),this.shipOptions()}initializeBoardPositioning(){this.renderBoardPlacement(),this.initializeOrientationHandler(),"enemy"===this.user&&this.hideEnemyBoard()}renderBoardPlacement(){const n=document.querySelector(`.${this.user}-board`);for(let e=0;e<this.boardSize*this.boardSize;e++){const t=document.createElement("div");t.classList.add(`${this.user}-cell`,`${this.user}-cell-${e}`),n.appendChild(t)}return"player"===this.user&&document.querySelectorAll(`.${this.user}-cell`).forEach(((n,e)=>{n.addEventListener("mouseover",(()=>{this.shipChosen&&this.previewBoardShip(e,this.shipChosen)})),n.addEventListener("click",(()=>{this.shipChosen&&this.placeChosenShipInBoard(this.shipChosen)}))})),"enemy"===this.user&&this.enemyShipPlacement(),n}enemyShipPlacement(){this.currPrevShipIndices=[],[{name:"Carrier",size:5},{name:"Battleship",size:4},{name:"Destroyer",size:3},{name:"Submarine",size:2}].forEach((n=>{let e=!1;for(;!e;){const t=Math.random()>.5?"horizontal":"vertical",i=Math.floor(Math.random()*(this.boardSize*this.boardSize));this.currPrevShipIndices=[],this.calculateShipPlacement(i,t,n.size),n.position=[...this.currPrevShipIndices],this.isPlacementValid(n)&&(this.placeChosenShipInBoard(n),e=!0)}}))}calculateShipPlacement(n,e,t){if("horizontal"===e){let e=n,i=e+t-1;const o=Math.floor(e/this.boardSize)*this.boardSize+this.boardSize-1;i>o&&(i=o,e=i-t+1);for(let n=e;n<=i;n++)this.currPrevShipIndices.push(n)}else if("vertical"===e){let e=n,i=e+(t-1)*this.boardSize;const o=e%this.boardSize;i>=this.boardSize*this.boardSize&&(i=o+(this.boardSize-1)*this.boardSize,e=i-(t-1)*this.boardSize);for(let n=e;n<=i;n+=this.boardSize)this.currPrevShipIndices.push(n)}}hideEnemyBoard(){document.querySelector(`.${this.user}-board`).style.display="none"}previewBoardShip(n,e){const t=document.querySelectorAll(`.${this.user}-board .${this.user}-cell`);t.forEach((n=>n.classList.remove("ship-preview"))),this.currPrevShipIndices=[];const i=Math.floor(n/this.boardSize)*this.boardSize,o=i+this.boardSize-1;"horizontal"===e.orientation?this.previewHorizontal(i,o,e,t,n):this.previewVertical(n,e,t)}previewHorizontal(n,e,t,i,o){const a=Math.floor(t.size/2);let r=o-a,s=o+a;if(t.size%2!=0){r<n&&(r=n,s=r+t.size-1),s>e&&(s=e,r=s-t.size+1);for(let n=r;n<=s;n++)i[n]&&(i[n].classList.add("ship-preview"),this.currPrevShipIndices.push(n))}else if(t.size%2==0){let a=o,r=o+t.size-1;a<n&&(a=n,r=a+t.size-1),r>e&&(r=e,a=r-t.size+1);for(let n=a;n<=r;n++)i[n]&&(i[n].classList.add("ship-preview"),this.currPrevShipIndices.push(n))}}previewVertical(n,e,t){const i=n%this.boardSize;let o=n-i+i-Math.floor(e.size/2)*this.boardSize,a=o+(e.size-1)*this.boardSize;o<0&&(o=i,a=o+(e.size-1)*this.boardSize),a>=this.boardSize*this.boardSize&&(a=i+(this.boardSize-1)*this.boardSize,o=a-(e.size-1)*this.boardSize);for(let n=o;n<=a;n+=this.boardSize)t[n]&&(t[n].classList.add("ship-preview"),this.currPrevShipIndices.push(n))}toggleChangeOrientation(n){"horizontal"===n.orientation?n.orientation="vertical":"vertical"===n.orientation&&(n.orientation="horizontal")}initializeOrientationHandler(){"player"===this.user&&document.querySelector(".rotate-btn").addEventListener("click",(()=>{this.shipChosen&&(this.toggleChangeOrientation(this.shipChosen),this.previewBoardShip(this.shipChosen.currentIndex,this.shipChosen))}))}shipOptions(){const n=document.querySelector(".ship-options"),e=document.querySelector(".ship-chosen-msg"),t=n.children;if(Array.from(t).forEach((n=>{n.addEventListener("click",(()=>{this.lastSavedShip&&this.lastSavedShip.classList.remove("ship-chosen"),n.classList.add("ship-chosen"),this.shipChosen={name:n.getAttribute("data-name"),size:parseInt(n.getAttribute("data-size"),10),orientation:n.getAttribute("data-orientation")},e.innerText=`${this.shipChosen.name} selected`,this.lastSavedShip=n}))})),t.length>0){const n=t[0];this.lastSavedShip&&this.lastSavedShip.classList.remove("ship-chosen"),n.classList.add("ship-chosen"),this.shipChosen={name:n.getAttribute("data-name"),size:parseInt(n.getAttribute("data-size"),10),orientation:n.getAttribute("data-orientation")},e.innerText=`${this.shipChosen.name} selected`,this.lastSavedShip=n}}isPlacementValid(n){const{position:e}=n,t=e.every((n=>n>=0&&n<this.boardSize*this.boardSize&&null===this.boardState[n])),i=this.shipsList.some((e=>e.name===n.name));return t&&!i}placeChosenShipInBoard(n){if(!n)return;const e=new g(n.name,n.size,this.user);e.position=[...this.currPrevShipIndices];const t=document.querySelector(".notification-msg");if("player"===this.user){if(this.isPlacementValid(e))this.currPrevShipIndices.forEach((n=>{this.boardState[n]=e.name,document.querySelector(`.${this.user}-board .${this.user}-cell-${n}`).classList.add(`${e.name}`)})),this.shipsList.push(e),t.innerText=`${e.name} deployed Captain!`;else{const n=this.shipsList.some((n=>n.name===e.name));t.innerText=n?"Ship already in position Captain.":`Invalid position for ${e.name} Captain.`}this.askGameStart()}else"enemy"===this.user&&(this.isPlacementValid(e)&&(this.currPrevShipIndices.forEach((n=>{this.boardState[n]=e.name,document.querySelector(`.${this.user}-board .${this.user}-cell-${n}`).classList.add(`${e.name}`)})),this.shipsList.push(e)),this.saveBoardState())}askGameStart(){4===this.shipsList.length&&(document.querySelector(".notification-msg").innerText="Full Steam Ahead!",document.querySelector(".start-game-modal").style.display="block"),this.saveBoardState()}saveBoardState(){localStorage.setItem(`${this.user}-boardState`,JSON.stringify(this.boardState));const n=this.shipsList.map((n=>({name:n.name,size:n.size,user:n.user})));localStorage.setItem(`${this.user}-shipsList`,JSON.stringify(n))}loadBoardState(){const n=localStorage.getItem(`${this.user}-boardState`);return null!==n&&(this.boardState=JSON.parse(n)),this.boardState}loadShipsList(){const n=localStorage.getItem(`${this.user}-shipsList`);return null!==n&&(this.shipsList=JSON.parse(n).map((n=>new g(n.name,n.size,n.user)))),this.shipsList}}class f{constructor(n,e,t,i){this.playerBoardState=n,this.playerShipsList=e,this.enemyBoardState=t,this.enemyShipsList=i,this.isPlayerTurn=!0,this.initializeGamePlay(),console.log(this.playerShipsList.map((n=>n.constructor.name)))}initializeGamePlay(){this.playGame()}playGame(){this.populateBoards(),this.playerMove()}populateBoards(){const n=document.querySelector(".player-board"),e=document.querySelector(".enemy-board");this.playerBoardState.forEach(((e,t)=>{const i=document.createElement("div");i.classList.add("player-cell"),null===e?(i.classList.add(`player-cell-${t}`),i.classList.add(`empty-cell-${t}`)):i.classList.add(e),n.appendChild(i)})),this.enemyBoardState.forEach(((n,t)=>{const i=document.createElement("div");i.classList.add("enemy-cell"),null===n?(i.classList.add(`enemy-cell-${t}`),i.classList.add(`empty-cell-${t}`)):(i.classList.add(n),i.classList.add("enemy-ship")),e.appendChild(i)}))}listenToAttacks(n){const e=document.querySelectorAll(`.${n}-cell`);"enemy"===n&&e.forEach((n=>{n.addEventListener("click",(()=>{this.isPlayerTurn&&(this.attackFire("player",n),this.endTurn())}),{once:!0})}))}attackFire(n,e){["Carrier","Battleship","Destroyer","Submarine"].some((t=>!!e.classList.contains(t)&&(e.classList.remove(t),e.classList.add("damage"),this.hitTracker(t,n),this.checkGameStatus(),!0)))||e.classList.add("missed")}successfulAttack(){console.log("Successful attack captain, one of their ship is damaged")}failedAttack(){console.log("Our attacks have missed Captain")}playerMove(){this.listenToAttacks("enemy")}enemyMove(){const n=this.enemyRandomAttack();this.enemyAttack(n)}enemyRandomAttack(){return Math.floor(Math.random()*this.playerBoardState.length)}enemyAttack(n){const e=document.querySelectorAll(".player-cell");if(n<=e.length){const t=e[n];t.classList.contains("damage")||t.classList.contains("missed")?setTimeout((()=>{this.enemyMove()}),250):(this.attackFire("enemy",t),this.endTurn())}}endTurn(){this.isPlayerTurn=!this.isPlayerTurn,this.isPlayerTurn?this.playerMove():setTimeout((()=>{this.enemyMove()}),500)}hitTracker(n,e){"player"===e&&this.enemyShipsList.forEach((e=>{e.name===n&&e.hit()})),"enemy"===e&&this.playerShipsList.forEach((e=>{e.name===n&&e.hit()}))}checkGameStatus(){const n=this.enemyShipsList.every((n=>!0===n.destroyed)),e=this.playerShipsList.every((n=>!0===n.destroyed));this.gameOver(e,n)}gameOver(n,e){const t=document.querySelector(".game-over-title"),i=document.querySelector(".game-over-modal");e?(t.innerText="You win",i.style.display="block"):n&&(t.innerText="Defeated")}}!function(){!function(){const n=document.querySelector("main"),e=document.createElement("div");e.classList.add("landing-frame"),e.innerHTML='<h1>Battle Ship⛴</h2>\n  <button class="play-button">Play</button>',n.appendChild(e)}();const n=document.querySelector("main");localStorage.removeItem("player-boardState"),localStorage.removeItem("player-shipsList"),localStorage.removeItem("enemy-boardState"),localStorage.removeItem("enemy-shipsList"),document.querySelector(".play-button").addEventListener("click",(()=>{n.innerHTML="",function(){const n=document.querySelector("main"),e=document.createElement("div");e.classList.add("setupboard-frame"),e.innerHTML=`<div class="player-board-container">\n        <h1>Player Board</h1>\n        <div class="notif-btn-container">\n          <h3 class="notification-msg">Captain our ships are ready to be setup!</h3> \n          <img src="${C}" alt="Rotate Button" class="rotate-btn">\n        </div>\n        <div class="player-board"></div>\n        <div class="enemy-board"></div>\n      </div>\n      <div class="ship-options-container">\n        <h1>Ship Options</h1>\n        <div>\n          <h3 class="ship-chosen-msg"></h3>\n        </div>\n        <div class="ship-options">\n          <div\n            class="carrier-preview"\n            data-name="Carrier"\n            data-size="5"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="battleship-preview"\n            data-name="Battleship"\n            data-size="4"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="destroyer-preview"\n            data-name="Destroyer"\n            data-size="3"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="submarine-preview"\n            data-name="Submarine"\n            data-size="2"\n            data-orientation="horizontal"\n          ></div>\n        </div>\n      </div>\n      `;const t=document.createElement("div");t.classList.add("start-game-modal"),t.innerHTML='<div class="start-game-modal-content">\n      <h1 class="start-game-title">Awaiting Your Orders Captain</h1>\n      <button class="start-game-button">Fire</button>\n  </div>',n.appendChild(e),n.appendChild(t)}();const e=new E("player"),t=new E("enemy");document.querySelector(".start-game-button").addEventListener("click",(()=>{n.innerHTML="",function(){const n=document.querySelector("main"),e=document.createElement("div");e.classList.add("game-frame"),e.innerHTML='<div class="player-board-container">\n        <div>\n          <h1>Allied Waters</h1>\n        </div>\n        <div class="player-board"></div>\n      </div>\n      <div class="enemy-board-game-container">\n        <h1>Enemies Waters</h1>\n        <div class="enemy-board""></div>\n      </div>\n     ',n.appendChild(e);const t=document.createElement("div");t.classList.add("game-over-modal"),t.innerHTML='<div class="game-over-modal-content">\n      <h1 class="game-over-title"></h1>\n  </div>',n.appendChild(t)}(),new f(e.loadBoardState(),e.loadShipsList(),t.loadBoardState(),t.loadShipsList())}))}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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UCxHQUNELEdBRU4sQ0FVQWdELEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sb2lkLXRlbXBsYXRlLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly9sb2lkLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9sb2lkLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9sb2lkLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vbG9pZC10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9sb2lkLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9sb2lkLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2xvaWQtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vbG9pZC10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2xvaWQtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9sb2lkLXRlbXBsYXRlL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2xvaWQtdGVtcGxhdGUvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vbG9pZC10ZW1wbGF0ZS93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vbG9pZC10ZW1wbGF0ZS93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2xvaWQtdGVtcGxhdGUvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9sb2lkLXRlbXBsYXRlL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL2xvaWQtdGVtcGxhdGUvd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vbG9pZC10ZW1wbGF0ZS93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vbG9pZC10ZW1wbGF0ZS8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly9sb2lkLXRlbXBsYXRlLy4vc3JjL2JhdHRsZXNoaXAvc2hpcC5qcyIsIndlYnBhY2s6Ly9sb2lkLXRlbXBsYXRlLy4vc3JjL2JhdHRsZXNoaXAvZ2FtZWJvYXJkLmpzIiwid2VicGFjazovL2xvaWQtdGVtcGxhdGUvLi9zcmMvYmF0dGxlc2hpcC9nYW1lcGxheS5qcyIsIndlYnBhY2s6Ly9sb2lkLXRlbXBsYXRlLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL2xvaWQtdGVtcGxhdGUvLi9zcmMvYXBwRnJhbWVzL2xhbmRpbmdGcmFtZS5qcyIsIndlYnBhY2s6Ly9sb2lkLXRlbXBsYXRlLy4vc3JjL2FwcEZyYW1lcy9zZXR1cEJvYXJkRnJhbWUuanMiLCJ3ZWJwYWNrOi8vbG9pZC10ZW1wbGF0ZS8uL3NyYy9hcHBGcmFtZXMvZ2FtZUZyYW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCJpbWcvYmctaW1nLndlYnBcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU5vdGFibGUmZGlzcGxheT1zd2FwKTtcIl0pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9QW50b24rU0MmZmFtaWx5PU1vbnRzZXJyYXQ6aXRhbCx3Z2h0QDAsMTAwLi45MDA7MSwxMDAuLjkwMCZmYW1pbHk9Tm90bytTYW5zK1N5bWJvbHM6d2dodEAxMDAuLjkwMCZkaXNwbGF5PXN3YXApO1wiXSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAqOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbioge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMS41O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cblxuaW1nLFxucGljdHVyZSxcbnZpZGVvLFxuY2FudmFzLFxuc3ZnIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuaW5wdXQsXG5idXR0b24sXG50ZXh0YXJlYSxcbnNlbGVjdCB7XG4gIGZvbnQ6IGluaGVyaXQ7XG59XG5cbnAsXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xufVxuXG4jcm9vdCxcbiNfX25leHQge1xuICBpc29sYXRpb246IGlzb2xhdGU7XG59XG5cblxubGkge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JywgJ1NlZ29lIFVJJywgVGFob21hLCBHZW5ldmEsIFZlcmRhbmEsIHNhbnMtc2VyaWZcbn1cblxuaHRtbCxcbmJvZHkge1xuICBoZWlnaHQ6IDEwMHZoO1xufVxuXG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19ffSk7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbm1haW4ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuXG4ubGFuZGluZy1mcmFtZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubGFuZGluZy1mcmFtZT5oMSB7XG4gIGZvbnQtc2l6ZTogNnJlbTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LWZhbWlseTogJ05vdGFibGUnLCAnTm90ZSBTYW5zIFN5bWJvbHMnO1xuICBjb2xvcjogcmdiKDI1NSwgMTA1LCA1KTtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgdGV4dC1zaGFkb3c6IDNweCAzcHggNXB4IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgLXdlYmtpdC10ZXh0LXN0cm9rZTogMnB4IGJsYWNrO1xufVxuXG5Aa2V5ZnJhbWVzIG1vdmVVcERvd24ge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG5cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG59XG5cbi5wbGF5LWJ1dHRvbiB7XG4gIHdpZHRoOiAyNTBweDtcbiAgaGVpZ2h0OiA3MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgZm9udC1zaXplOiAyLjByZW07XG4gIGZvbnQtZmFtaWx5OiAnTm90YWJsZScsICdDb3VyaWVyIE5ldycsIENvdXJpZXIsIG1vbm9zcGFjZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjMpO1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNDAlO1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA0MCU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiBub25lO1xuICBhbmltYXRpb246IG1vdmVVcERvd24gM3MgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG59XG5cbi5wbGF5LWJ1dHRvbjpob3Zlcixcbi5zdGFydC1nYW1lLWJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDEwNSwgNSk7XG4gIGNvbG9yOiBibGFjaztcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uc2V0dXBib2FyZC1mcmFtZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGdhcDogNTBweDtcbn1cblxuLnBsYXllci1ib2FyZCxcbi5lbmVteS1ib2FyZCB7XG4gIHdpZHRoOiA1MDBweDtcbiAgaGVpZ2h0OiA1MDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cblxuLnBsYXllci1ib2FyZC1jb250YWluZXIge1xuICBkaXNwbGFZOiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IDEwcHg7XG59XG5cbi5lbmVteS1ib2FyZC1nYW1lLWNvbnRhaW5lciB7XG4gIGRpc3BsYVk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogOHB4O1xufVxuXG4uc2hpcC1vcHRpb25zLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogMTVweFxufVxuXG4uZW5lbXktYm9hcmQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnJvdGF0ZS1idG4ge1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xufVxuXG4ucm90YXRlLWJ0bjpob3ZlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3R0b206IDVweDtcbn1cblxuLnNoaXAtb3B0aW9ucyB7XG4gIHdpZHRoOiA1MDBweDtcbiAgaGVpZ2h0OiA1MDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IDUwcHg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubm90aWZpY2F0aW9uLW1zZyB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLmVuZW15LWNlbGwsXG4ucGxheWVyLWNlbGwge1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuXG4uc2hpcC1jaG9zZW4ge1xuICBib3JkZXI6IDJweCBzb2xpZCB3aGl0ZTtcbn1cblxuLmNhcnJpZXItcHJldmlldyB7XG4gIHdpZHRoOiAyNTBweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2aW9sZXQ7XG59XG5cbi5iYXR0bGVzaGlwLXByZXZpZXcge1xuICB3aWR0aDogMjAwcHg7XG4gIGhlaWdodDogNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogb3JhbmdlO1xufVxuXG4uZGVzdHJveWVyLXByZXZpZXcge1xuICB3aWR0aDogMTUwcHg7XG4gIGhlaWdodDogNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O1xufVxuXG4uc3VibWFyaW5lLXByZXZpZXcge1xuICB3aWR0aDogMTAwcHg7XG4gIGhlaWdodDogNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XG59XG5cbi5zaGlwLXByZXZpZXcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDEyOCwgMjU1LCAwLjUpO1xufVxuXG4uQ2FycmllciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZpb2xldDtcbn1cblxuLkJhdHRsZXNoaXAge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XG59XG5cbi5EZXN0cm95ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB5ZWxsb3c7XG59XG5cbi5TdWJtYXJpbmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcbn1cblxuLmVuZW15LXNoaXAge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuXG4ubm90aWYtYnRuLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMzBweDtcbn1cblxuLnN0YXJ0LWdhbWUtbW9kYWwge1xuICBkaXNwbGF5OiBub25lO1xuICB6LWluZGV4OiAxO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cblxuXG4uc3RhcnQtZ2FtZS1tb2RhbC1jb250ZW50IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAxMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDgwJTtcbn1cblxuLnN0YXJ0LWdhbWUtdGl0bGUge1xuICBmb250LXNpemU6IDRyZW07XG4gIGZvbnQtZmFtaWx5OiAnTm90YWJsZScsICdOb3RlIFNhbnMgU3ltYm9scyc7XG4gIGNvbG9yOiByZ2IoMjU1LCAxMDUsIDUpO1xuICB0ZXh0LXNoYWRvdzogM3B4IDNweCA1cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xuICAtd2Via2l0LXRleHQtc3Ryb2tlOiAycHggYmxhY2s7XG59XG5cbi5zdGFydC1nYW1lLWJ1dHRvbiB7XG4gIHdpZHRoOiAyNTBweDtcbiAgZm9udC1zaXplOiAyLjVyZW07XG4gIHBhZGRpbmctYm90dG9tOiAxNXB4O1xuICBmb250LWZhbWlseTogJ05vdGFibGUnLCAnQ291cmllciBOZXcnLCBDb3VyaWVyLCBtb25vc3BhY2U7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDQwJTtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDQwJTtcbiAgY29sb3I6IHdoaXRlO1xuICBib3JkZXI6IG5vbmU7XG4gIGFuaW1hdGlvbjogbW92ZVVwRG93biAzcyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbn1cblxuLmdhbWUtZnJhbWUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBnYXA6IDEwMHB4O1xufVxuXG4uZGFtYWdlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xufVxuXG4ubWlzc2VkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG59XG5cbi5nYW1lLW92ZXItbW9kYWwge1xuICBkaXNwbGF5OiBub25lO1xuICB6LWluZGV4OiAxO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cblxuLmdhbWUtb3Zlci1tb2RhbC1jb250ZW50IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAxMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDgwJTtcbn1cblxuLmdhbWUtb3Zlci10aXRsZSB7XG4gIGZvbnQtc2l6ZTogNHJlbTtcbiAgZm9udC1mYW1pbHk6ICdOb3RhYmxlJywgJ05vdGUgU2FucyBTeW1ib2xzJztcbiAgY29sb3I6IHJnYigyNTUsIDEwNSwgNSk7XG4gIHRleHQtc2hhZG93OiAzcHggM3B4IDVweCByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gIC13ZWJraXQtdGV4dC1zdHJva2U6IDJweCBibGFjaztcbn1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBTUE7O0VBRUUsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsU0FBUztFQUNULFVBQVU7QUFDWjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixtQ0FBbUM7QUFDckM7O0FBRUE7Ozs7O0VBS0UsY0FBYztFQUNkLGVBQWU7QUFDakI7O0FBRUE7Ozs7RUFJRSxhQUFhO0FBQ2Y7O0FBRUE7Ozs7Ozs7RUFPRSx5QkFBeUI7QUFDM0I7O0FBRUE7O0VBRUUsa0JBQWtCO0FBQ3BCOzs7QUFHQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFO0FBQ0Y7O0FBRUE7O0VBRUUsYUFBYTtBQUNmOzs7QUFHQTtFQUNFLHlEQUF3QztFQUN4QyxzQkFBc0I7RUFDdEIsNEJBQTRCO0VBQzVCLDJCQUEyQjtFQUMzQixhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOzs7QUFHQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsc0JBQXNCO0VBQ3RCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsMkNBQTJDO0VBQzNDLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsMkNBQTJDO0VBQzNDLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFO0lBQ0Usd0JBQXdCO0VBQzFCOztFQUVBO0lBQ0UsNEJBQTRCO0VBQzlCOztFQUVBO0lBQ0Usd0JBQXdCO0VBQzFCO0FBQ0Y7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUNa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QjtBQUNoQ1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Ob3RhYmxlJmRpc3BsYXk9c3dhcCcpO1xcbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUFudG9uK1NDJmZhbWlseT1Nb250c2VycmF0Oml0YWwsd2dodEAwLDEwMC4uOTAwOzEsMTAwLi45MDAmZmFtaWx5PU5vdG8rU2FucytTeW1ib2xzOndnaHRAMTAwLi45MDAmZGlzcGxheT1zd2FwJyk7XFxuXFxuXFxuXFxuXFxuKjo6YmVmb3JlLFxcbio6OmFmdGVyIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbioge1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG59XFxuXFxuYm9keSB7XFxuICBsaW5lLWhlaWdodDogMS41O1xcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XFxufVxcblxcbmltZyxcXG5waWN0dXJlLFxcbnZpZGVvLFxcbmNhbnZhcyxcXG5zdmcge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBtYXgtd2lkdGg6IDEwMCU7XFxufVxcblxcbmlucHV0LFxcbmJ1dHRvbixcXG50ZXh0YXJlYSxcXG5zZWxlY3Qge1xcbiAgZm9udDogaW5oZXJpdDtcXG59XFxuXFxucCxcXG5oMSxcXG5oMixcXG5oMyxcXG5oNCxcXG5oNSxcXG5oNiB7XFxuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xcbn1cXG5cXG4jcm9vdCxcXG4jX19uZXh0IHtcXG4gIGlzb2xhdGlvbjogaXNvbGF0ZTtcXG59XFxuXFxuXFxubGkge1xcbiAgbGlzdC1zdHlsZTogbm9uZTtcXG59XFxuXFxuaHRtbCB7XFxuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCAnU2Vnb2UgVUknLCBUYWhvbWEsIEdlbmV2YSwgVmVyZGFuYSwgc2Fucy1zZXJpZlxcbn1cXG5cXG5odG1sLFxcbmJvZHkge1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG59XFxuXFxuXFxuYm9keSB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXFxcImltZy9iZy1pbWcud2VicFxcXCIpO1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG5tYWluIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcblxcbi5sYW5kaW5nLWZyYW1lIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ubGFuZGluZy1mcmFtZT5oMSB7XFxuICBmb250LXNpemU6IDZyZW07XFxuICBmb250LXN0eWxlOiBpdGFsaWM7XFxuICBmb250LWZhbWlseTogJ05vdGFibGUnLCAnTm90ZSBTYW5zIFN5bWJvbHMnO1xcbiAgY29sb3I6IHJnYigyNTUsIDEwNSwgNSk7XFxuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xcbiAgdGV4dC1zaGFkb3c6IDNweCAzcHggNXB4IHJnYmEoMCwgMCwgMCwgMC41KTtcXG4gIC13ZWJraXQtdGV4dC1zdHJva2U6IDJweCBibGFjaztcXG59XFxuXFxuQGtleWZyYW1lcyBtb3ZlVXBEb3duIHtcXG4gIDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xcbiAgfVxcblxcbiAgNTAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMHB4KTtcXG4gIH1cXG5cXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XFxuICB9XFxufVxcblxcbi5wbGF5LWJ1dHRvbiB7XFxuICB3aWR0aDogMjUwcHg7XFxuICBoZWlnaHQ6IDcwcHg7XFxuICBwYWRkaW5nLWJvdHRvbTogMTBweDtcXG4gIGZvbnQtc2l6ZTogMi4wcmVtO1xcbiAgZm9udC1mYW1pbHk6ICdOb3RhYmxlJywgJ0NvdXJpZXIgTmV3JywgQ291cmllciwgbW9ub3NwYWNlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjMpO1xcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDQwJTtcXG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDQwJTtcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGFuaW1hdGlvbjogbW92ZVVwRG93biAzcyBlYXNlLWluLW91dCBpbmZpbml0ZTtcXG59XFxuXFxuLnBsYXktYnV0dG9uOmhvdmVyLFxcbi5zdGFydC1nYW1lLWJ1dHRvbjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAxMDUsIDUpO1xcbiAgY29sb3I6IGJsYWNrO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uc2V0dXBib2FyZC1mcmFtZSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIGdhcDogNTBweDtcXG59XFxuXFxuLnBsYXllci1ib2FyZCxcXG4uZW5lbXktYm9hcmQge1xcbiAgd2lkdGg6IDUwMHB4O1xcbiAgaGVpZ2h0OiA1MDBweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtd3JhcDogd3JhcDtcXG59XFxuXFxuLnBsYXllci1ib2FyZC1jb250YWluZXIge1xcbiAgZGlzcGxhWTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBnYXA6IDEwcHg7XFxufVxcblxcbi5lbmVteS1ib2FyZC1nYW1lLWNvbnRhaW5lciB7XFxuICBkaXNwbGFZOiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGdhcDogOHB4O1xcbn1cXG5cXG4uc2hpcC1vcHRpb25zLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGdhcDogMTVweFxcbn1cXG5cXG4uZW5lbXktYm9hcmQtY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5yb3RhdGUtYnRuIHtcXG4gIHdpZHRoOiA0MHB4O1xcbiAgaGVpZ2h0OiA0MHB4O1xcbn1cXG5cXG4ucm90YXRlLWJ0bjpob3ZlciB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBib3R0b206IDVweDtcXG59XFxuXFxuLnNoaXAtb3B0aW9ucyB7XFxuICB3aWR0aDogNTAwcHg7XFxuICBoZWlnaHQ6IDUwMHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBnYXA6IDUwcHg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5ub3RpZmljYXRpb24tbXNnIHtcXG4gIGNvbG9yOiBibGFjaztcXG59XFxuXFxuLmVuZW15LWNlbGwsXFxuLnBsYXllci1jZWxsIHtcXG4gIHdpZHRoOiA1MHB4O1xcbiAgaGVpZ2h0OiA1MHB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG5cXG4uc2hpcC1jaG9zZW4ge1xcbiAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7XFxufVxcblxcbi5jYXJyaWVyLXByZXZpZXcge1xcbiAgd2lkdGg6IDI1MHB4O1xcbiAgaGVpZ2h0OiA1MHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmlvbGV0O1xcbn1cXG5cXG4uYmF0dGxlc2hpcC1wcmV2aWV3IHtcXG4gIHdpZHRoOiAyMDBweDtcXG4gIGhlaWdodDogNTBweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IG9yYW5nZTtcXG59XFxuXFxuLmRlc3Ryb3llci1wcmV2aWV3IHtcXG4gIHdpZHRoOiAxNTBweDtcXG4gIGhlaWdodDogNTBweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcXG59XFxuXFxuLnN1Ym1hcmluZS1wcmV2aWV3IHtcXG4gIHdpZHRoOiAxMDBweDtcXG4gIGhlaWdodDogNTBweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xcbn1cXG5cXG4uc2hpcC1wcmV2aWV3IHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMTI4LCAyNTUsIDAuNSk7XFxufVxcblxcbi5DYXJyaWVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZpb2xldDtcXG59XFxuXFxuLkJhdHRsZXNoaXAge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogb3JhbmdlO1xcbn1cXG5cXG4uRGVzdHJveWVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcXG59XFxuXFxuLlN1Ym1hcmluZSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcXG59XFxuXFxuLmVuZW15LXNoaXAge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxufVxcblxcblxcbi5ub3RpZi1idG4tY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiAzMHB4O1xcbn1cXG5cXG4uc3RhcnQtZ2FtZS1tb2RhbCB7XFxuICBkaXNwbGF5OiBub25lO1xcbiAgei1pbmRleDogMTtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xcbn1cXG5cXG5cXG4uc3RhcnQtZ2FtZS1tb2RhbC1jb250ZW50IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgdG9wOiAxMCU7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogODAlO1xcbn1cXG5cXG4uc3RhcnQtZ2FtZS10aXRsZSB7XFxuICBmb250LXNpemU6IDRyZW07XFxuICBmb250LWZhbWlseTogJ05vdGFibGUnLCAnTm90ZSBTYW5zIFN5bWJvbHMnO1xcbiAgY29sb3I6IHJnYigyNTUsIDEwNSwgNSk7XFxuICB0ZXh0LXNoYWRvdzogM3B4IDNweCA1cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcXG4gIC13ZWJraXQtdGV4dC1zdHJva2U6IDJweCBibGFjaztcXG59XFxuXFxuLnN0YXJ0LWdhbWUtYnV0dG9uIHtcXG4gIHdpZHRoOiAyNTBweDtcXG4gIGZvbnQtc2l6ZTogMi41cmVtO1xcbiAgcGFkZGluZy1ib3R0b206IDE1cHg7XFxuICBmb250LWZhbWlseTogJ05vdGFibGUnLCAnQ291cmllciBOZXcnLCBDb3VyaWVyLCBtb25vc3BhY2U7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMyk7XFxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNDAlO1xcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDQwJTtcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGFuaW1hdGlvbjogbW92ZVVwRG93biAzcyBlYXNlLWluLW91dCBpbmZpbml0ZTtcXG59XFxuXFxuLmdhbWUtZnJhbWUge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICBnYXA6IDEwMHB4O1xcbn1cXG5cXG4uZGFtYWdlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG59XFxuXFxuLm1pc3NlZCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG59XFxuXFxuLmdhbWUtb3Zlci1tb2RhbCB7XFxuICBkaXNwbGF5OiBub25lO1xcbiAgei1pbmRleDogMTtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xcbn1cXG5cXG4uZ2FtZS1vdmVyLW1vZGFsLWNvbnRlbnQge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB0b3A6IDEwJTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiA4MCU7XFxufVxcblxcbi5nYW1lLW92ZXItdGl0bGUge1xcbiAgZm9udC1zaXplOiA0cmVtO1xcbiAgZm9udC1mYW1pbHk6ICdOb3RhYmxlJywgJ05vdGUgU2FucyBTeW1ib2xzJztcXG4gIGNvbG9yOiByZ2IoMjU1LCAxMDUsIDUpO1xcbiAgdGV4dC1zaGFkb3c6IDNweCAzcHggNXB4IHJnYmEoMCwgMCwgMCwgMC41KTtcXG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XFxuICAtd2Via2l0LXRleHQtc3Ryb2tlOiAycHggYmxhY2s7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7XG5cbiAgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH1cblxuICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSB7XG5cdFx0XHR2YXIgaSA9IHNjcmlwdHMubGVuZ3RoIC0gMTtcblx0XHRcdHdoaWxlIChpID4gLTEgJiYgKCFzY3JpcHRVcmwgfHwgIS9eaHR0cChzPyk6Ly50ZXN0KHNjcmlwdFVybCkpKSBzY3JpcHRVcmwgPSBzY3JpcHRzW2ktLV0uc3JjO1xuXHRcdH1cblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5iID0gZG9jdW1lbnQuYmFzZVVSSSB8fCBzZWxmLmxvY2F0aW9uLmhyZWY7XG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0NzkyOiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG4vLyBubyBvbiBjaHVua3MgbG9hZGVkXG5cbi8vIG5vIGpzb25wIGZ1bmN0aW9uIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5vcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiY2xhc3MgQ3JlYXRlU2hpcCB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIHNpemUpIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMuc2l6ZSA9IHNpemU7XG4gICAgdGhpcy5oaXRzID0gMDtcbiAgICB0aGlzLnBvc2l0aW9uID0gW107XG4gICAgdGhpcy5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgfVxuXG4gIGlzU3VuaygpIHtcbiAgICBpZiAodGhpcy5oaXRzID09PSB0aGlzLnNpemUpIHtcbiAgICAgIGNvbnNvbGUubG9nKGAke3RoaXMubmFtZX0gaXMgc3Vua2ApO1xuICAgICAgdGhpcy5kZXN0cm95ZWQgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGhpdCgpIHtcbiAgICB0aGlzLmhpdHMrKztcbiAgICB0aGlzLmlzU3VuaygpO1xuICB9XG5cbiAgc2V0UG9zaXRpb24oaW5kaWNlcykge1xuICAgIHRoaXMucG9zaXRpb24gPSBpbmRpY2VzO1xuICB9XG59XG5cbmV4cG9ydCB7IENyZWF0ZVNoaXAgfTtcbiIsImltcG9ydCB7IENyZWF0ZVNoaXAgfSBmcm9tIFwiLi9zaGlwXCI7XG5cbmNsYXNzIEdhbWVib2FyZCB7XG4gIGNvbnN0cnVjdG9yKHVzZXIpIHtcbiAgICB0aGlzLmJvYXJkU2l6ZSA9IDEwO1xuICAgIHRoaXMudXNlciA9IHVzZXI7XG4gICAgdGhpcy5ib2FyZFN0YXRlID0gQXJyYXkodGhpcy5ib2FyZFNpemUgKiB0aGlzLmJvYXJkU2l6ZSkuZmlsbChudWxsKTtcbiAgICB0aGlzLmJvYXJkID0gW107XG4gICAgdGhpcy5jdXJyUHJldlNoaXBJbmRpY2VzID0gW107XG4gICAgdGhpcy5zaGlwc0xpc3QgPSBbXTtcbiAgICB0aGlzLnNoaXBDaG9zZW4gPSBudWxsO1xuICAgIHRoaXMubGFzdFNhdmVkU2hpcCA9IG51bGw7XG4gICAgdGhpcy5pbml0aWFsaXplQm9hcmRQb3NpdGlvbmluZygpO1xuICAgIHRoaXMubG9hZEJvYXJkU3RhdGUoKTtcbiAgICB0aGlzLnNoaXBPcHRpb25zKCk7XG4gIH1cblxuICBpbml0aWFsaXplQm9hcmRQb3NpdGlvbmluZygpIHtcbiAgICB0aGlzLnJlbmRlckJvYXJkUGxhY2VtZW50KCk7XG4gICAgdGhpcy5pbml0aWFsaXplT3JpZW50YXRpb25IYW5kbGVyKCk7XG5cbiAgICBpZiAodGhpcy51c2VyID09PSBcImVuZW15XCIpIHtcbiAgICAgIHRoaXMuaGlkZUVuZW15Qm9hcmQoKTtcbiAgICB9XG4gIH1cblxuICByZW5kZXJCb2FyZFBsYWNlbWVudCgpIHtcbiAgICBjb25zdCBib2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke3RoaXMudXNlcn0tYm9hcmRgKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5ib2FyZFNpemUgKiB0aGlzLmJvYXJkU2l6ZTsgaSsrKSB7XG4gICAgICBjb25zdCBjZWxsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgIGNlbGwuY2xhc3NMaXN0LmFkZChgJHt0aGlzLnVzZXJ9LWNlbGxgLCBgJHt0aGlzLnVzZXJ9LWNlbGwtJHtpfWApO1xuICAgICAgYm9hcmQuYXBwZW5kQ2hpbGQoY2VsbCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMudXNlciA9PT0gXCJwbGF5ZXJcIikge1xuICAgICAgY29uc3QgY2VsbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGAuJHt0aGlzLnVzZXJ9LWNlbGxgKTtcbiAgICAgIGNlbGxzLmZvckVhY2goKGNlbGwsIGNlbnRlckluZGV4KSA9PiB7XG4gICAgICAgIGNlbGwuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3ZlclwiLCAoKSA9PiB7XG4gICAgICAgICAgaWYgKHRoaXMuc2hpcENob3Nlbikge1xuICAgICAgICAgICAgdGhpcy5wcmV2aWV3Qm9hcmRTaGlwKGNlbnRlckluZGV4LCB0aGlzLnNoaXBDaG9zZW4pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGNlbGwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICBpZiAodGhpcy5zaGlwQ2hvc2VuKSB7XG4gICAgICAgICAgICB0aGlzLnBsYWNlQ2hvc2VuU2hpcEluQm9hcmQodGhpcy5zaGlwQ2hvc2VuKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMudXNlciA9PT0gXCJlbmVteVwiKSB7XG4gICAgICB0aGlzLmVuZW15U2hpcFBsYWNlbWVudCgpO1xuICAgIH1cblxuICAgIHJldHVybiBib2FyZDtcbiAgfVxuXG4gIGVuZW15U2hpcFBsYWNlbWVudCgpIHtcbiAgICBjb25zdCBlbmVteVNoaXBzID0gW1xuICAgICAge1xuICAgICAgICBuYW1lOiBcIkNhcnJpZXJcIixcbiAgICAgICAgc2l6ZTogNSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6IFwiQmF0dGxlc2hpcFwiLFxuICAgICAgICBzaXplOiA0LFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogXCJEZXN0cm95ZXJcIixcbiAgICAgICAgc2l6ZTogMyxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6IFwiU3VibWFyaW5lXCIsXG4gICAgICAgIHNpemU6IDIsXG4gICAgICB9LFxuICAgIF07XG5cbiAgICB0aGlzLmN1cnJQcmV2U2hpcEluZGljZXMgPSBbXTtcblxuICAgIGVuZW15U2hpcHMuZm9yRWFjaCgoc2hpcCkgPT4ge1xuICAgICAgbGV0IHZhbGlkUGxhY2VtZW50ID0gZmFsc2U7XG5cbiAgICAgIHdoaWxlICghdmFsaWRQbGFjZW1lbnQpIHtcbiAgICAgICAgY29uc3QgZW5lbXlTaGlwT3JpZW50YWlvbiA9XG4gICAgICAgICAgTWF0aC5yYW5kb20oKSA+IDAuNSA/IFwiaG9yaXpvbnRhbFwiIDogXCJ2ZXJ0aWNhbFwiO1xuICAgICAgICBjb25zdCBlbmVteVN0YXJ0SW5kZXggPSBNYXRoLmZsb29yKFxuICAgICAgICAgIE1hdGgucmFuZG9tKCkgKiAodGhpcy5ib2FyZFNpemUgKiB0aGlzLmJvYXJkU2l6ZSksXG4gICAgICAgICk7XG5cbiAgICAgICAgdGhpcy5jdXJyUHJldlNoaXBJbmRpY2VzID0gW107XG4gICAgICAgIHRoaXMuY2FsY3VsYXRlU2hpcFBsYWNlbWVudChcbiAgICAgICAgICBlbmVteVN0YXJ0SW5kZXgsXG4gICAgICAgICAgZW5lbXlTaGlwT3JpZW50YWlvbixcbiAgICAgICAgICBzaGlwLnNpemUsXG4gICAgICAgICk7XG5cbiAgICAgICAgc2hpcC5wb3NpdGlvbiA9IFsuLi50aGlzLmN1cnJQcmV2U2hpcEluZGljZXNdO1xuXG4gICAgICAgIGlmICh0aGlzLmlzUGxhY2VtZW50VmFsaWQoc2hpcCkpIHtcbiAgICAgICAgICB0aGlzLnBsYWNlQ2hvc2VuU2hpcEluQm9hcmQoc2hpcCk7XG4gICAgICAgICAgdmFsaWRQbGFjZW1lbnQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBjYWxjdWxhdGVTaGlwUGxhY2VtZW50KGVuZW15U3RhcnRJbmRleCwgZW5lbXlTaGlwT3JpZW50YXRpb24sIGVuZW15U2hpcFNpemUpIHtcbiAgICBpZiAoZW5lbXlTaGlwT3JpZW50YXRpb24gPT09IFwiaG9yaXpvbnRhbFwiKSB7XG4gICAgICBsZXQgc3RhcnRJbmRleCA9IGVuZW15U3RhcnRJbmRleDtcbiAgICAgIGxldCBlbmRJbmRleCA9IHN0YXJ0SW5kZXggKyBlbmVteVNoaXBTaXplIC0gMTtcblxuICAgICAgY29uc3Qgcm93U3RhcnQgPSBNYXRoLmZsb29yKHN0YXJ0SW5kZXggLyB0aGlzLmJvYXJkU2l6ZSkgKiB0aGlzLmJvYXJkU2l6ZTtcbiAgICAgIGNvbnN0IHJvd0VuZCA9IHJvd1N0YXJ0ICsgdGhpcy5ib2FyZFNpemUgLSAxO1xuXG4gICAgICBpZiAoZW5kSW5kZXggPiByb3dFbmQpIHtcbiAgICAgICAgZW5kSW5kZXggPSByb3dFbmQ7XG4gICAgICAgIHN0YXJ0SW5kZXggPSBlbmRJbmRleCAtIGVuZW15U2hpcFNpemUgKyAxO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGxldCBpID0gc3RhcnRJbmRleDsgaSA8PSBlbmRJbmRleDsgaSsrKSB7XG4gICAgICAgIHRoaXMuY3VyclByZXZTaGlwSW5kaWNlcy5wdXNoKGkpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoZW5lbXlTaGlwT3JpZW50YXRpb24gPT09IFwidmVydGljYWxcIikge1xuICAgICAgbGV0IHN0YXJ0SW5kZXggPSBlbmVteVN0YXJ0SW5kZXg7XG4gICAgICBsZXQgZW5kSW5kZXggPSBzdGFydEluZGV4ICsgKGVuZW15U2hpcFNpemUgLSAxKSAqIHRoaXMuYm9hcmRTaXplO1xuXG4gICAgICBjb25zdCBjb2xTdGFydCA9IHN0YXJ0SW5kZXggJSB0aGlzLmJvYXJkU2l6ZTtcblxuICAgICAgaWYgKGVuZEluZGV4ID49IHRoaXMuYm9hcmRTaXplICogdGhpcy5ib2FyZFNpemUpIHtcbiAgICAgICAgZW5kSW5kZXggPSBjb2xTdGFydCArICh0aGlzLmJvYXJkU2l6ZSAtIDEpICogdGhpcy5ib2FyZFNpemU7XG4gICAgICAgIHN0YXJ0SW5kZXggPSBlbmRJbmRleCAtIChlbmVteVNoaXBTaXplIC0gMSkgKiB0aGlzLmJvYXJkU2l6ZTtcbiAgICAgIH1cblxuICAgICAgZm9yIChsZXQgaSA9IHN0YXJ0SW5kZXg7IGkgPD0gZW5kSW5kZXg7IGkgKz0gdGhpcy5ib2FyZFNpemUpIHtcbiAgICAgICAgdGhpcy5jdXJyUHJldlNoaXBJbmRpY2VzLnB1c2goaSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaGlkZUVuZW15Qm9hcmQoKSB7XG4gICAgY29uc3QgYm9hcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHt0aGlzLnVzZXJ9LWJvYXJkYCk7XG4gICAgYm9hcmQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICB9XG5cbiAgcHJldmlld0JvYXJkU2hpcChjZW50ZXJJbmRleCwgY2hvc2VuU2hpcCkge1xuICAgIGNvbnN0IGNlbGxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcbiAgICAgIGAuJHt0aGlzLnVzZXJ9LWJvYXJkIC4ke3RoaXMudXNlcn0tY2VsbGAsXG4gICAgKTtcbiAgICBjZWxscy5mb3JFYWNoKChjZWxsKSA9PiBjZWxsLmNsYXNzTGlzdC5yZW1vdmUoXCJzaGlwLXByZXZpZXdcIikpO1xuXG4gICAgdGhpcy5jdXJyUHJldlNoaXBJbmRpY2VzID0gW107XG5cbiAgICBjb25zdCByb3dTdGFydCA9IE1hdGguZmxvb3IoY2VudGVySW5kZXggLyB0aGlzLmJvYXJkU2l6ZSkgKiB0aGlzLmJvYXJkU2l6ZTtcbiAgICBjb25zdCByb3dFbmQgPSByb3dTdGFydCArIHRoaXMuYm9hcmRTaXplIC0gMTtcblxuICAgIGlmIChjaG9zZW5TaGlwLm9yaWVudGF0aW9uID09PSBcImhvcml6b250YWxcIikge1xuICAgICAgdGhpcy5wcmV2aWV3SG9yaXpvbnRhbChyb3dTdGFydCwgcm93RW5kLCBjaG9zZW5TaGlwLCBjZWxscywgY2VudGVySW5kZXgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnByZXZpZXdWZXJ0aWNhbChjZW50ZXJJbmRleCwgY2hvc2VuU2hpcCwgY2VsbHMpO1xuICAgIH1cbiAgfVxuXG4gIHByZXZpZXdIb3Jpem9udGFsKHJvd1N0YXJ0LCByb3dFbmQsIGNob3NlblNoaXAsIGNlbGxzLCBjZW50ZXJJbmRleCkge1xuICAgIGNvbnN0IGhhbGZTaXplID0gTWF0aC5mbG9vcihjaG9zZW5TaGlwLnNpemUgLyAyKTtcbiAgICBsZXQgc3RhcnRJbmRleCA9IGNlbnRlckluZGV4IC0gaGFsZlNpemU7XG4gICAgbGV0IGVuZEluZGV4ID0gY2VudGVySW5kZXggKyBoYWxmU2l6ZTtcblxuICAgIGlmIChjaG9zZW5TaGlwLnNpemUgJSAyICE9PSAwKSB7XG4gICAgICBpZiAoc3RhcnRJbmRleCA8IHJvd1N0YXJ0KSB7XG4gICAgICAgIHN0YXJ0SW5kZXggPSByb3dTdGFydDtcbiAgICAgICAgZW5kSW5kZXggPSBzdGFydEluZGV4ICsgY2hvc2VuU2hpcC5zaXplIC0gMTtcbiAgICAgIH1cblxuICAgICAgaWYgKGVuZEluZGV4ID4gcm93RW5kKSB7XG4gICAgICAgIGVuZEluZGV4ID0gcm93RW5kO1xuICAgICAgICBzdGFydEluZGV4ID0gZW5kSW5kZXggLSBjaG9zZW5TaGlwLnNpemUgKyAxO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGxldCBpID0gc3RhcnRJbmRleDsgaSA8PSBlbmRJbmRleDsgaSsrKSB7XG4gICAgICAgIGlmIChjZWxsc1tpXSkge1xuICAgICAgICAgIGNlbGxzW2ldLmNsYXNzTGlzdC5hZGQoXCJzaGlwLXByZXZpZXdcIik7XG4gICAgICAgICAgdGhpcy5jdXJyUHJldlNoaXBJbmRpY2VzLnB1c2goaSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGNob3NlblNoaXAuc2l6ZSAlIDIgPT09IDApIHtcbiAgICAgIGxldCBzdGFydEluZGV4ID0gY2VudGVySW5kZXg7XG4gICAgICBsZXQgZW5kSW5kZXggPSBjZW50ZXJJbmRleCArIGNob3NlblNoaXAuc2l6ZSAtIDE7XG5cbiAgICAgIGlmIChzdGFydEluZGV4IDwgcm93U3RhcnQpIHtcbiAgICAgICAgc3RhcnRJbmRleCA9IHJvd1N0YXJ0O1xuICAgICAgICBlbmRJbmRleCA9IHN0YXJ0SW5kZXggKyBjaG9zZW5TaGlwLnNpemUgLSAxO1xuICAgICAgfVxuXG4gICAgICBpZiAoZW5kSW5kZXggPiByb3dFbmQpIHtcbiAgICAgICAgZW5kSW5kZXggPSByb3dFbmQ7XG4gICAgICAgIHN0YXJ0SW5kZXggPSBlbmRJbmRleCAtIGNob3NlblNoaXAuc2l6ZSArIDE7XG4gICAgICB9XG5cbiAgICAgIGZvciAobGV0IGkgPSBzdGFydEluZGV4OyBpIDw9IGVuZEluZGV4OyBpKyspIHtcbiAgICAgICAgaWYgKGNlbGxzW2ldKSB7XG4gICAgICAgICAgY2VsbHNbaV0uY2xhc3NMaXN0LmFkZChcInNoaXAtcHJldmlld1wiKTtcbiAgICAgICAgICB0aGlzLmN1cnJQcmV2U2hpcEluZGljZXMucHVzaChpKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHByZXZpZXdWZXJ0aWNhbChjZW50ZXJJbmRleCwgY2hvc2VuU2hpcCwgY2VsbHMpIHtcbiAgICBjb25zdCBjb2xTdGFydCA9IGNlbnRlckluZGV4ICUgdGhpcy5ib2FyZFNpemU7XG4gICAgY29uc3QgdmVydGljYWxTdGFydCA9IGNlbnRlckluZGV4IC0gY29sU3RhcnQ7XG4gICAgY29uc3QgaGFsZlNpemUgPSBNYXRoLmZsb29yKGNob3NlblNoaXAuc2l6ZSAvIDIpO1xuXG4gICAgbGV0IHN0YXJ0SW5kZXggPSB2ZXJ0aWNhbFN0YXJ0ICsgY29sU3RhcnQgLSBoYWxmU2l6ZSAqIHRoaXMuYm9hcmRTaXplO1xuICAgIGxldCBlbmRJbmRleCA9IHN0YXJ0SW5kZXggKyAoY2hvc2VuU2hpcC5zaXplIC0gMSkgKiB0aGlzLmJvYXJkU2l6ZTtcblxuICAgIC8vIEVuc3VyZSBzdGFydEluZGV4IGFuZCBlbmRJbmRleCBhcmUgd2l0aGluIGJvdW5kc1xuICAgIGlmIChzdGFydEluZGV4IDwgMCkge1xuICAgICAgc3RhcnRJbmRleCA9IGNvbFN0YXJ0O1xuICAgICAgZW5kSW5kZXggPSBzdGFydEluZGV4ICsgKGNob3NlblNoaXAuc2l6ZSAtIDEpICogdGhpcy5ib2FyZFNpemU7XG4gICAgfVxuXG4gICAgaWYgKGVuZEluZGV4ID49IHRoaXMuYm9hcmRTaXplICogdGhpcy5ib2FyZFNpemUpIHtcbiAgICAgIGVuZEluZGV4ID0gY29sU3RhcnQgKyAodGhpcy5ib2FyZFNpemUgLSAxKSAqIHRoaXMuYm9hcmRTaXplO1xuICAgICAgc3RhcnRJbmRleCA9IGVuZEluZGV4IC0gKGNob3NlblNoaXAuc2l6ZSAtIDEpICogdGhpcy5ib2FyZFNpemU7XG4gICAgfVxuXG4gICAgZm9yIChsZXQgaSA9IHN0YXJ0SW5kZXg7IGkgPD0gZW5kSW5kZXg7IGkgKz0gdGhpcy5ib2FyZFNpemUpIHtcbiAgICAgIGlmIChjZWxsc1tpXSkge1xuICAgICAgICBjZWxsc1tpXS5jbGFzc0xpc3QuYWRkKFwic2hpcC1wcmV2aWV3XCIpO1xuICAgICAgICB0aGlzLmN1cnJQcmV2U2hpcEluZGljZXMucHVzaChpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB0b2dnbGVDaGFuZ2VPcmllbnRhdGlvbihjaG9zZW5TaGlwKSB7XG4gICAgaWYgKGNob3NlblNoaXAub3JpZW50YXRpb24gPT09IFwiaG9yaXpvbnRhbFwiKSB7XG4gICAgICBjaG9zZW5TaGlwLm9yaWVudGF0aW9uID0gXCJ2ZXJ0aWNhbFwiO1xuICAgIH0gZWxzZSBpZiAoY2hvc2VuU2hpcC5vcmllbnRhdGlvbiA9PT0gXCJ2ZXJ0aWNhbFwiKVxuICAgICAgY2hvc2VuU2hpcC5vcmllbnRhdGlvbiA9IFwiaG9yaXpvbnRhbFwiO1xuICB9XG5cbiAgaW5pdGlhbGl6ZU9yaWVudGF0aW9uSGFuZGxlcigpIHtcbiAgICBpZiAodGhpcy51c2VyID09PSBcInBsYXllclwiKSB7XG4gICAgICBjb25zdCBjaGFuZ2VPcmllbnRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnJvdGF0ZS1idG5cIik7XG5cbiAgICAgIGNoYW5nZU9yaWVudEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBpZiAodGhpcy5zaGlwQ2hvc2VuKSB7XG4gICAgICAgICAgdGhpcy50b2dnbGVDaGFuZ2VPcmllbnRhdGlvbih0aGlzLnNoaXBDaG9zZW4pO1xuICAgICAgICAgIHRoaXMucHJldmlld0JvYXJkU2hpcCh0aGlzLnNoaXBDaG9zZW4uY3VycmVudEluZGV4LCB0aGlzLnNoaXBDaG9zZW4pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBzaGlwT3B0aW9ucygpIHtcbiAgICBjb25zdCBzaGlwT3B0aW9uc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2hpcC1vcHRpb25zXCIpO1xuICAgIGNvbnN0IHNoaXBDaG9zZW5Nc2cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNoaXAtY2hvc2VuLW1zZ1wiKTtcblxuICAgIGNvbnN0IHNoaXBPcHRpb25zID0gc2hpcE9wdGlvbnNDb250YWluZXIuY2hpbGRyZW47XG5cbiAgICBBcnJheS5mcm9tKHNoaXBPcHRpb25zKS5mb3JFYWNoKChzaGlwKSA9PiB7XG4gICAgICBzaGlwLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGlmICh0aGlzLmxhc3RTYXZlZFNoaXApIHtcbiAgICAgICAgICB0aGlzLmxhc3RTYXZlZFNoaXAuY2xhc3NMaXN0LnJlbW92ZShcInNoaXAtY2hvc2VuXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgc2hpcC5jbGFzc0xpc3QuYWRkKFwic2hpcC1jaG9zZW5cIik7XG5cbiAgICAgICAgdGhpcy5zaGlwQ2hvc2VuID0ge1xuICAgICAgICAgIG5hbWU6IHNoaXAuZ2V0QXR0cmlidXRlKFwiZGF0YS1uYW1lXCIpLFxuICAgICAgICAgIHNpemU6IHBhcnNlSW50KHNoaXAuZ2V0QXR0cmlidXRlKFwiZGF0YS1zaXplXCIpLCAxMCksXG4gICAgICAgICAgb3JpZW50YXRpb246IHNoaXAuZ2V0QXR0cmlidXRlKFwiZGF0YS1vcmllbnRhdGlvblwiKSxcbiAgICAgICAgfTtcblxuICAgICAgICBzaGlwQ2hvc2VuTXNnLmlubmVyVGV4dCA9IGAke3RoaXMuc2hpcENob3Nlbi5uYW1lfSBzZWxlY3RlZGA7XG5cbiAgICAgICAgdGhpcy5sYXN0U2F2ZWRTaGlwID0gc2hpcDtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgaWYgKHNoaXBPcHRpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnN0IGZpcnN0U2hpcCA9IHNoaXBPcHRpb25zWzBdO1xuXG4gICAgICBpZiAodGhpcy5sYXN0U2F2ZWRTaGlwKSB7XG4gICAgICAgIHRoaXMubGFzdFNhdmVkU2hpcC5jbGFzc0xpc3QucmVtb3ZlKFwic2hpcC1jaG9zZW5cIik7XG4gICAgICB9XG5cbiAgICAgIGZpcnN0U2hpcC5jbGFzc0xpc3QuYWRkKFwic2hpcC1jaG9zZW5cIik7XG5cbiAgICAgIHRoaXMuc2hpcENob3NlbiA9IHtcbiAgICAgICAgbmFtZTogZmlyc3RTaGlwLmdldEF0dHJpYnV0ZShcImRhdGEtbmFtZVwiKSxcbiAgICAgICAgc2l6ZTogcGFyc2VJbnQoZmlyc3RTaGlwLmdldEF0dHJpYnV0ZShcImRhdGEtc2l6ZVwiKSwgMTApLFxuICAgICAgICBvcmllbnRhdGlvbjogZmlyc3RTaGlwLmdldEF0dHJpYnV0ZShcImRhdGEtb3JpZW50YXRpb25cIiksXG4gICAgICB9O1xuXG4gICAgICBzaGlwQ2hvc2VuTXNnLmlubmVyVGV4dCA9IGAke3RoaXMuc2hpcENob3Nlbi5uYW1lfSBzZWxlY3RlZGA7XG5cbiAgICAgIHRoaXMubGFzdFNhdmVkU2hpcCA9IGZpcnN0U2hpcDtcbiAgICB9XG4gIH1cblxuICBpc1BsYWNlbWVudFZhbGlkKHNoaXApIHtcbiAgICBjb25zdCB7IHBvc2l0aW9uIH0gPSBzaGlwO1xuXG4gICAgY29uc3QgcG9zaXRpb25zVmFsaWQgPSBwb3NpdGlvbi5ldmVyeSgoaW5kZXgpID0+IHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIGluZGV4ID49IDAgJiZcbiAgICAgICAgaW5kZXggPCB0aGlzLmJvYXJkU2l6ZSAqIHRoaXMuYm9hcmRTaXplICYmXG4gICAgICAgIHRoaXMuYm9hcmRTdGF0ZVtpbmRleF0gPT09IG51bGxcbiAgICAgICk7XG4gICAgfSk7XG5cbiAgICBjb25zdCBzaGlwQWxyZWFkeVBsYWNlZCA9IHRoaXMuc2hpcHNMaXN0LnNvbWUoXG4gICAgICAoZXhpc3RpbmdTaGlwKSA9PiBleGlzdGluZ1NoaXAubmFtZSA9PT0gc2hpcC5uYW1lLFxuICAgICk7XG5cbiAgICByZXR1cm4gcG9zaXRpb25zVmFsaWQgJiYgIXNoaXBBbHJlYWR5UGxhY2VkO1xuICB9XG5cbiAgLy8gTW9kaWZpZWQgZnVuY3Rpb24gdG8gcGxhY2UgdGhlIGNob3NlbiBzaGlwIGluIHRoZSBib2FyZFxuICBwbGFjZUNob3NlblNoaXBJbkJvYXJkKGNob3NlblNoaXApIHtcbiAgICBpZiAoIWNob3NlblNoaXApIHJldHVybjtcblxuICAgIGNvbnN0IHNoaXAgPSBuZXcgQ3JlYXRlU2hpcChjaG9zZW5TaGlwLm5hbWUsIGNob3NlblNoaXAuc2l6ZSwgdGhpcy51c2VyKTtcbiAgICBzaGlwLnBvc2l0aW9uID0gWy4uLnRoaXMuY3VyclByZXZTaGlwSW5kaWNlc107XG5cbiAgICBjb25zdCBub3RpZk1zZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubm90aWZpY2F0aW9uLW1zZ1wiKTtcblxuICAgIGlmICh0aGlzLnVzZXIgPT09IFwicGxheWVyXCIpIHtcbiAgICAgIGlmICh0aGlzLmlzUGxhY2VtZW50VmFsaWQoc2hpcCkpIHtcbiAgICAgICAgdGhpcy5jdXJyUHJldlNoaXBJbmRpY2VzLmZvckVhY2goKGluZGV4KSA9PiB7XG4gICAgICAgICAgdGhpcy5ib2FyZFN0YXRlW2luZGV4XSA9IHNoaXAubmFtZTtcblxuICAgICAgICAgIGNvbnN0IGNlbGxFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgIGAuJHt0aGlzLnVzZXJ9LWJvYXJkIC4ke3RoaXMudXNlcn0tY2VsbC0ke2luZGV4fWAsXG4gICAgICAgICAgKTtcblxuICAgICAgICAgIGNlbGxFbGVtZW50LmNsYXNzTGlzdC5hZGQoYCR7c2hpcC5uYW1lfWApO1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLnNoaXBzTGlzdC5wdXNoKHNoaXApO1xuXG4gICAgICAgIG5vdGlmTXNnLmlubmVyVGV4dCA9IGAke3NoaXAubmFtZX0gZGVwbG95ZWQgQ2FwdGFpbiFgO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3Qgc2hpcEFscmVhZHlQbGFjZWQgPSB0aGlzLnNoaXBzTGlzdC5zb21lKFxuICAgICAgICAgIChleGlzdGluZ1NoaXApID0+IGV4aXN0aW5nU2hpcC5uYW1lID09PSBzaGlwLm5hbWUsXG4gICAgICAgICk7XG5cbiAgICAgICAgaWYgKHNoaXBBbHJlYWR5UGxhY2VkKSB7XG4gICAgICAgICAgbm90aWZNc2cuaW5uZXJUZXh0ID0gYFNoaXAgYWxyZWFkeSBpbiBwb3NpdGlvbiBDYXB0YWluLmA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbm90aWZNc2cuaW5uZXJUZXh0ID0gYEludmFsaWQgcG9zaXRpb24gZm9yICR7c2hpcC5uYW1lfSBDYXB0YWluLmA7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy5hc2tHYW1lU3RhcnQoKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMudXNlciA9PT0gXCJlbmVteVwiKSB7XG4gICAgICBpZiAodGhpcy5pc1BsYWNlbWVudFZhbGlkKHNoaXApKSB7XG4gICAgICAgIHRoaXMuY3VyclByZXZTaGlwSW5kaWNlcy5mb3JFYWNoKChpbmRleCkgPT4ge1xuICAgICAgICAgIHRoaXMuYm9hcmRTdGF0ZVtpbmRleF0gPSBzaGlwLm5hbWU7XG5cbiAgICAgICAgICBjb25zdCBjZWxsRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgICBgLiR7dGhpcy51c2VyfS1ib2FyZCAuJHt0aGlzLnVzZXJ9LWNlbGwtJHtpbmRleH1gLFxuICAgICAgICAgICk7XG5cbiAgICAgICAgICBjZWxsRWxlbWVudC5jbGFzc0xpc3QuYWRkKGAke3NoaXAubmFtZX1gKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5zaGlwc0xpc3QucHVzaChzaGlwKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zYXZlQm9hcmRTdGF0ZSgpO1xuICAgIH1cbiAgfVxuXG4gIGFza0dhbWVTdGFydCgpIHtcbiAgICBpZiAodGhpcy5zaGlwc0xpc3QubGVuZ3RoID09PSA0KSB7XG4gICAgICBjb25zdCBub3RpZk1zZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubm90aWZpY2F0aW9uLW1zZ1wiKTtcbiAgICAgIG5vdGlmTXNnLmlubmVyVGV4dCA9IGBGdWxsIFN0ZWFtIEFoZWFkIWA7XG5cbiAgICAgIGNvbnN0IHN0YXJ0R2FtZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zdGFydC1nYW1lLW1vZGFsXCIpO1xuICAgICAgc3RhcnRHYW1lTW9kYWwuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICB9XG5cbiAgICB0aGlzLnNhdmVCb2FyZFN0YXRlKCk7XG4gIH1cblxuICBzYXZlQm9hcmRTdGF0ZSgpIHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcbiAgICAgIGAke3RoaXMudXNlcn0tYm9hcmRTdGF0ZWAsXG4gICAgICBKU09OLnN0cmluZ2lmeSh0aGlzLmJvYXJkU3RhdGUpLFxuICAgICk7XG5cbiAgICBjb25zdCBzZXJpYWxpemFibGVTaGlwc0xpc3QgPSB0aGlzLnNoaXBzTGlzdC5tYXAoKHNoaXApID0+ICh7XG4gICAgICBuYW1lOiBzaGlwLm5hbWUsXG4gICAgICBzaXplOiBzaGlwLnNpemUsXG4gICAgICB1c2VyOiBzaGlwLnVzZXIsXG4gICAgfSkpO1xuXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXG4gICAgICBgJHt0aGlzLnVzZXJ9LXNoaXBzTGlzdGAsXG4gICAgICBKU09OLnN0cmluZ2lmeShzZXJpYWxpemFibGVTaGlwc0xpc3QpLFxuICAgICk7XG4gIH1cblxuICBsb2FkQm9hcmRTdGF0ZSgpIHtcbiAgICBjb25zdCBzYXZlZEJvYXJkU3RhdGUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShgJHt0aGlzLnVzZXJ9LWJvYXJkU3RhdGVgKTtcblxuICAgIC8vIFBhcnNlIG9ubHkgaWYgdGhlIHZhbHVlIGlzIG5vdCBudWxsXG4gICAgaWYgKHNhdmVkQm9hcmRTdGF0ZSAhPT0gbnVsbCkge1xuICAgICAgdGhpcy5ib2FyZFN0YXRlID0gSlNPTi5wYXJzZShzYXZlZEJvYXJkU3RhdGUpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmJvYXJkU3RhdGU7XG4gIH1cblxuICBsb2FkU2hpcHNMaXN0KCkge1xuICAgIGNvbnN0IHNhdmVkU2hpcHNMaXN0ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oYCR7dGhpcy51c2VyfS1zaGlwc0xpc3RgKTtcbiAgICBpZiAoc2F2ZWRTaGlwc0xpc3QgIT09IG51bGwpIHtcbiAgICAgIHRoaXMuc2hpcHNMaXN0ID0gSlNPTi5wYXJzZShzYXZlZFNoaXBzTGlzdCkubWFwKFxuICAgICAgICAoc2hpcERhdGEpID0+XG4gICAgICAgICAgbmV3IENyZWF0ZVNoaXAoc2hpcERhdGEubmFtZSwgc2hpcERhdGEuc2l6ZSwgc2hpcERhdGEudXNlciksXG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnNoaXBzTGlzdDtcbiAgfVxufVxuXG5leHBvcnQgeyBHYW1lYm9hcmQgfTtcbiIsImNsYXNzIEdhbWVwbGF5IHtcbiAgY29uc3RydWN0b3IoXG4gICAgcGxheWVyQm9hcmRTdGF0ZSxcbiAgICBwbGF5ZXJTaGlwc0xpc3QsXG4gICAgZW5lbXlCb2FyZFN0YXRlLFxuICAgIGVuZW15U2hpcHNMaXN0LFxuICApIHtcbiAgICB0aGlzLnBsYXllckJvYXJkU3RhdGUgPSBwbGF5ZXJCb2FyZFN0YXRlO1xuICAgIHRoaXMucGxheWVyU2hpcHNMaXN0ID0gcGxheWVyU2hpcHNMaXN0O1xuICAgIHRoaXMuZW5lbXlCb2FyZFN0YXRlID0gZW5lbXlCb2FyZFN0YXRlO1xuICAgIHRoaXMuZW5lbXlTaGlwc0xpc3QgPSBlbmVteVNoaXBzTGlzdDtcbiAgICB0aGlzLmlzUGxheWVyVHVybiA9IHRydWU7XG4gICAgdGhpcy5pbml0aWFsaXplR2FtZVBsYXkoKTtcblxuICAgIGNvbnNvbGUubG9nKHRoaXMucGxheWVyU2hpcHNMaXN0Lm1hcCgoc2hpcCkgPT4gc2hpcC5jb25zdHJ1Y3Rvci5uYW1lKSk7IC8vIFNob3VsZCBzaG93IFwiQ3JlYXRlU2hpcFwiXG4gIH1cblxuICBpbml0aWFsaXplR2FtZVBsYXkoKSB7XG4gICAgdGhpcy5wbGF5R2FtZSgpO1xuICB9XG5cbiAgcGxheUdhbWUoKSB7XG4gICAgdGhpcy5wb3B1bGF0ZUJvYXJkcygpO1xuXG4gICAgdGhpcy5wbGF5ZXJNb3ZlKCk7XG4gIH1cblxuICAvL3BvcHVsYXRlIGJvYXJkcyB3aXRoIHRoZSBjZWxscyBhY2NvcmRpbmcgZnJvbSBhcnJheSBvZiBlYWNoIGJvYXJkU3RhdGVcbiAgcG9wdWxhdGVCb2FyZHMoKSB7XG4gICAgY29uc3QgcGxheWVyQm9hcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYXllci1ib2FyZFwiKTtcbiAgICBjb25zdCBlbmVteUJvYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbmVteS1ib2FyZFwiKTtcblxuICAgIHRoaXMucGxheWVyQm9hcmRTdGF0ZS5mb3JFYWNoKChjZWxsLCBpbmRleCkgPT4ge1xuICAgICAgY29uc3QgY2VsbEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgY2VsbEVsZW1lbnQuY2xhc3NMaXN0LmFkZChgcGxheWVyLWNlbGxgKTtcblxuICAgICAgaWYgKGNlbGwgPT09IG51bGwpIHtcbiAgICAgICAgY2VsbEVsZW1lbnQuY2xhc3NMaXN0LmFkZChgcGxheWVyLWNlbGwtJHtpbmRleH1gKTtcbiAgICAgICAgY2VsbEVsZW1lbnQuY2xhc3NMaXN0LmFkZChgZW1wdHktY2VsbC0ke2luZGV4fWApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2VsbEVsZW1lbnQuY2xhc3NMaXN0LmFkZChjZWxsKTtcbiAgICAgIH1cblxuICAgICAgcGxheWVyQm9hcmQuYXBwZW5kQ2hpbGQoY2VsbEVsZW1lbnQpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5lbmVteUJvYXJkU3RhdGUuZm9yRWFjaCgoY2VsbCwgaW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IGNlbGxFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgIGNlbGxFbGVtZW50LmNsYXNzTGlzdC5hZGQoYGVuZW15LWNlbGxgKTtcblxuICAgICAgaWYgKGNlbGwgPT09IG51bGwpIHtcbiAgICAgICAgY2VsbEVsZW1lbnQuY2xhc3NMaXN0LmFkZChgZW5lbXktY2VsbC0ke2luZGV4fWApO1xuICAgICAgICBjZWxsRWxlbWVudC5jbGFzc0xpc3QuYWRkKGBlbXB0eS1jZWxsLSR7aW5kZXh9YCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjZWxsRWxlbWVudC5jbGFzc0xpc3QuYWRkKGNlbGwpO1xuICAgICAgICBjZWxsRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZW5lbXktc2hpcFwiKTtcbiAgICAgIH1cbiAgICAgIGVuZW15Qm9hcmQuYXBwZW5kQ2hpbGQoY2VsbEVsZW1lbnQpO1xuICAgIH0pO1xuICB9XG5cbiAgbGlzdGVuVG9BdHRhY2tzKHVzZXIpIHtcbiAgICBjb25zdCBjZWxscyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYC4ke3VzZXJ9LWNlbGxgKTtcbiAgICAvL3RoaXMgbGlzdGVucyBmb3IgdXNlcidzIGF0dGFja3MgaW4gdGhlIGVuZW15IGJvYXJkXG5cbiAgICBpZiAodXNlciA9PT0gXCJlbmVteVwiKSB7XG4gICAgICBjZWxscy5mb3JFYWNoKChjZWxsKSA9PiB7XG4gICAgICAgIGNlbGwuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICAgICBcImNsaWNrXCIsXG4gICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuaXNQbGF5ZXJUdXJuKSB7XG4gICAgICAgICAgICAgIHRoaXMuYXR0YWNrRmlyZShcInBsYXllclwiLCBjZWxsKTtcbiAgICAgICAgICAgICAgdGhpcy5lbmRUdXJuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICB7IG9uY2U6IHRydWUgfSxcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGF0dGFja0ZpcmUodXNlciwgY2VsbCkge1xuICAgIGNvbnN0IHNoaXBMaXN0ID0gW1wiQ2FycmllclwiLCBcIkJhdHRsZXNoaXBcIiwgXCJEZXN0cm95ZXJcIiwgXCJTdWJtYXJpbmVcIl07XG5cbiAgICAvL3BhcnNlIHRocm91Z2ggZWFjaCBzaGlwIGluIHNoaXBzTGlzdFxuICAgIC8vY2hlY2sgaWYgb25lIG9mIHRoZSBzaGlwcyBpbnNpZGUgc2hpcGxzaXQgaXMgZXF1YWwgdG8gdGhlIHNoaXBsaXN0XG5cbiAgICBjb25zdCBzdWNjZXNzZnVsQXR0YWNrID0gc2hpcExpc3Quc29tZSgoc2hpcCkgPT4ge1xuICAgICAgaWYgKGNlbGwuY2xhc3NMaXN0LmNvbnRhaW5zKHNoaXApKSB7XG4gICAgICAgIGNlbGwuY2xhc3NMaXN0LnJlbW92ZShzaGlwKTtcblxuICAgICAgICAvLyB0aGlzLnN1Y2Nlc3NmdWxBdHRhY2soc2hpcCk7XG4gICAgICAgIGNlbGwuY2xhc3NMaXN0LmFkZChcImRhbWFnZVwiKTtcblxuICAgICAgICB0aGlzLmhpdFRyYWNrZXIoc2hpcCwgdXNlcik7XG4gICAgICAgIHRoaXMuY2hlY2tHYW1lU3RhdHVzKCk7XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSk7XG5cbiAgICBpZiAoIXN1Y2Nlc3NmdWxBdHRhY2spIHtcbiAgICAgIGNlbGwuY2xhc3NMaXN0LmFkZChcIm1pc3NlZFwiKTtcbiAgICB9XG4gIH1cblxuICBzdWNjZXNzZnVsQXR0YWNrKCkge1xuICAgIGNvbnNvbGUubG9nKGBTdWNjZXNzZnVsIGF0dGFjayBjYXB0YWluLCBvbmUgb2YgdGhlaXIgc2hpcCBpcyBkYW1hZ2VkYCk7XG4gIH1cblxuICBmYWlsZWRBdHRhY2soKSB7XG4gICAgY29uc29sZS5sb2coXCJPdXIgYXR0YWNrcyBoYXZlIG1pc3NlZCBDYXB0YWluXCIpO1xuICB9XG5cbiAgcGxheWVyTW92ZSgpIHtcbiAgICB0aGlzLmxpc3RlblRvQXR0YWNrcyhcImVuZW15XCIpO1xuICB9XG5cbiAgZW5lbXlNb3ZlKCkge1xuICAgIGNvbnN0IGF0dGFja2VkQ2VsbEluZGV4ID0gdGhpcy5lbmVteVJhbmRvbUF0dGFjaygpO1xuICAgIHRoaXMuZW5lbXlBdHRhY2soYXR0YWNrZWRDZWxsSW5kZXgpO1xuICB9XG5cbiAgZW5lbXlSYW5kb21BdHRhY2soKSB7XG4gICAgY29uc3QgZW5lbXlBdHRhY2tDZWxsID0gTWF0aC5mbG9vcihcbiAgICAgIE1hdGgucmFuZG9tKCkgKiB0aGlzLnBsYXllckJvYXJkU3RhdGUubGVuZ3RoLFxuICAgICk7XG5cbiAgICByZXR1cm4gZW5lbXlBdHRhY2tDZWxsO1xuICB9XG5cbiAgZW5lbXlBdHRhY2soYXR0YWNrZWRJbmRleCkge1xuICAgIGNvbnN0IGNlbGxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgLnBsYXllci1jZWxsYCk7XG4gICAgaWYgKGF0dGFja2VkSW5kZXggPD0gY2VsbHMubGVuZ3RoKSB7XG4gICAgICBjb25zdCBhdHRhY2tlZENlbGwgPSBjZWxsc1thdHRhY2tlZEluZGV4XTtcblxuICAgICAgaWYgKFxuICAgICAgICAhYXR0YWNrZWRDZWxsLmNsYXNzTGlzdC5jb250YWlucyhcImRhbWFnZVwiKSAmJlxuICAgICAgICAhYXR0YWNrZWRDZWxsLmNsYXNzTGlzdC5jb250YWlucyhcIm1pc3NlZFwiKVxuICAgICAgKSB7XG4gICAgICAgIHRoaXMuYXR0YWNrRmlyZShcImVuZW15XCIsIGF0dGFja2VkQ2VsbCk7XG4gICAgICAgIHRoaXMuZW5kVHVybigpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5lbmVteU1vdmUoKTtcbiAgICAgICAgfSwgMjUwKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBlbmRUdXJuKCkge1xuICAgIHRoaXMuaXNQbGF5ZXJUdXJuID0gIXRoaXMuaXNQbGF5ZXJUdXJuO1xuICAgIGlmICh0aGlzLmlzUGxheWVyVHVybikge1xuICAgICAgdGhpcy5wbGF5ZXJNb3ZlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLmVuZW15TW92ZSgpO1xuICAgICAgfSwgNTAwKTtcbiAgICB9XG4gIH1cblxuICBoaXRUcmFja2VyKHRhcmdldGVkU2hpcCwgdXNlcikge1xuICAgIGlmICh1c2VyID09PSBcInBsYXllclwiKSB7XG4gICAgICB0aGlzLmVuZW15U2hpcHNMaXN0LmZvckVhY2goKHNoaXApID0+IHtcbiAgICAgICAgaWYgKHNoaXAubmFtZSA9PT0gdGFyZ2V0ZWRTaGlwKSB7XG4gICAgICAgICAgc2hpcC5oaXQoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHVzZXIgPT09IFwiZW5lbXlcIikge1xuICAgICAgdGhpcy5wbGF5ZXJTaGlwc0xpc3QuZm9yRWFjaCgoc2hpcCkgPT4ge1xuICAgICAgICBpZiAoc2hpcC5uYW1lID09PSB0YXJnZXRlZFNoaXApIHtcbiAgICAgICAgICBzaGlwLmhpdCgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBjaGVja0dhbWVTdGF0dXMoKSB7XG4gICAgY29uc3QgZW5lbXlEZWZlYXRlZCA9IHRoaXMuZW5lbXlTaGlwc0xpc3QuZXZlcnkoXG4gICAgICAoc2hpcCkgPT4gc2hpcC5kZXN0cm95ZWQgPT09IHRydWUsXG4gICAgKTtcblxuICAgIGNvbnN0IHBsYXllckRlZmVhdGVkID0gdGhpcy5wbGF5ZXJTaGlwc0xpc3QuZXZlcnkoXG4gICAgICAoc2hpcCkgPT4gc2hpcC5kZXN0cm95ZWQgPT09IHRydWUsXG4gICAgKTtcblxuICAgIHRoaXMuZ2FtZU92ZXIocGxheWVyRGVmZWF0ZWQsIGVuZW15RGVmZWF0ZWQpO1xuICB9XG5cbiAgZ2FtZU92ZXIocGxheWVyRGVmZWF0ZWQsIGVuZW15RGVmZWF0ZWQpIHtcbiAgICBjb25zdCBnYW1lT3ZlclRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5nYW1lLW92ZXItdGl0bGVcIik7XG4gICAgY29uc3QgZ2FtZU92ZXJNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZ2FtZS1vdmVyLW1vZGFsXCIpO1xuXG4gICAgaWYgKGVuZW15RGVmZWF0ZWQpIHtcbiAgICAgIGdhbWVPdmVyVGl0bGUuaW5uZXJUZXh0ID0gXCJZb3Ugd2luXCI7XG4gICAgICBnYW1lT3Zlck1vZGFsLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgfSBlbHNlIGlmIChwbGF5ZXJEZWZlYXRlZCkge1xuICAgICAgZ2FtZU92ZXJUaXRsZS5pbm5lclRleHQgPSBcIkRlZmVhdGVkXCI7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCB7IEdhbWVwbGF5IH07XG4iLCJpbXBvcnQgXCIuL3N0eWxlLmNzc1wiO1xuXG5pbXBvcnQgeyBpbml0aWFsaXplTGFuZGluZ0ZyYW1lIH0gZnJvbSBcIi4vYXBwRnJhbWVzL2xhbmRpbmdGcmFtZVwiO1xuaW1wb3J0IHsgc2V0dXBCb2FyZEZyYW1lIH0gZnJvbSBcIi4vYXBwRnJhbWVzL3NldHVwQm9hcmRGcmFtZVwiO1xuaW1wb3J0IHsgR2FtZWJvYXJkIH0gZnJvbSBcIi4vYmF0dGxlc2hpcC9nYW1lYm9hcmRcIjtcbmltcG9ydCB7IGluaXRpYWxpemVHYW1lRnJhbWUgfSBmcm9tIFwiLi9hcHBGcmFtZXMvZ2FtZUZyYW1lXCI7XG5pbXBvcnQgeyBHYW1lcGxheSB9IGZyb20gXCIuL2JhdHRsZXNoaXAvZ2FtZXBsYXlcIjtcblxuZnVuY3Rpb24gaW5pdGlhbGl6ZUFwcCgpIHtcbiAgaW5pdGlhbGl6ZUxhbmRpbmdGcmFtZSgpO1xuXG4gIGNvbnN0IG1haW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwibWFpblwiKTtcblxuICBjbGVhckJvYXJkU3RhdGUoKTtcblxuICAvLyBIYW5kbGUgcGxheSBidXR0b24gY2xpY2sgdG8gdHJhbnNpdGlvbiB0byBzZXR1cCBib2FyZCBmcmFtZVxuICBjb25zdCBwbGF5QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGF5LWJ1dHRvblwiKTtcbiAgcGxheUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIG1haW4uaW5uZXJIVE1MID0gXCJcIjsgLy8gQ2xlYXIgdGhlIGN1cnJlbnQgdmlld1xuXG4gICAgc2V0dXBCb2FyZEZyYW1lKCk7XG5cbiAgICAvLyBJbml0aWFsaXplIHBsYXllciBnYW1lYm9hcmRcbiAgICBjb25zdCBwbGF5ZXIgPSBuZXcgR2FtZWJvYXJkKFwicGxheWVyXCIpO1xuICAgIGNvbnN0IGVuZW15ID0gbmV3IEdhbWVib2FyZChcImVuZW15XCIpO1xuXG4gICAgLy8gSGFuZGxlIHN0YXJ0IGdhbWUgYnV0dG9uIGNsaWNrIHRvIHRyYW5zaXRpb24gdG8gZ2FtZSBmcmFtZVxuICAgIGNvbnN0IHN0YXJ0R2FtZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc3RhcnQtZ2FtZS1idXR0b25cIik7XG4gICAgc3RhcnRHYW1lQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG5cbiAgICAgIGluaXRpYWxpemVHYW1lRnJhbWUoKTtcblxuICAgICAgY29uc3QgZ2FtZVBsYXkgPSBuZXcgR2FtZXBsYXkoXG4gICAgICAgIHBsYXllci5sb2FkQm9hcmRTdGF0ZSgpLFxuICAgICAgICBwbGF5ZXIubG9hZFNoaXBzTGlzdCgpLFxuICAgICAgICBlbmVteS5sb2FkQm9hcmRTdGF0ZSgpLFxuICAgICAgICBlbmVteS5sb2FkU2hpcHNMaXN0KCksXG4gICAgICApO1xuICAgIH0pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gY2xlYXJCb2FyZFN0YXRlKCkge1xuICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShcInBsYXllci1ib2FyZFN0YXRlXCIpO1xuICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShcInBsYXllci1zaGlwc0xpc3RcIik7XG4gIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwiZW5lbXktYm9hcmRTdGF0ZVwiKTtcbiAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oXCJlbmVteS1zaGlwc0xpc3RcIik7XG59XG5cbi8vIFN0YXJ0IHRoZSBhcHBsaWNhdGlvblxuaW5pdGlhbGl6ZUFwcCgpO1xuIiwiZnVuY3Rpb24gaW5pdGlhbGl6ZUxhbmRpbmdGcmFtZSgpIHtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtYWluXCIpO1xuXG4gIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgZGl2LmNsYXNzTGlzdC5hZGQoXCJsYW5kaW5nLWZyYW1lXCIpO1xuXG4gIGRpdi5pbm5lckhUTUwgPSBgPGgxPkJhdHRsZSBTaGlw4pu0PC9oMj5cbiAgPGJ1dHRvbiBjbGFzcz1cInBsYXktYnV0dG9uXCI+UGxheTwvYnV0dG9uPmA7XG5cbiAgbWFpbi5hcHBlbmRDaGlsZChkaXYpO1xufVxuXG5leHBvcnQgeyBpbml0aWFsaXplTGFuZGluZ0ZyYW1lIH07XG4iLCJpbXBvcnQgcm90YXRlQnRuIGZyb20gXCIuLi9pbWcvcm90YXRlLnN2Z1wiO1xuXG5mdW5jdGlvbiBzZXR1cEJvYXJkRnJhbWUoKSB7XG4gIGNvbnN0IG1haW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwibWFpblwiKTtcblxuICBjb25zdCBzZXR1cEJvYXJkRnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBzZXR1cEJvYXJkRnJhbWUuY2xhc3NMaXN0LmFkZChcInNldHVwYm9hcmQtZnJhbWVcIik7XG4gIHNldHVwQm9hcmRGcmFtZS5pbm5lckhUTUwgPSBgPGRpdiBjbGFzcz1cInBsYXllci1ib2FyZC1jb250YWluZXJcIj5cbiAgICAgICAgPGgxPlBsYXllciBCb2FyZDwvaDE+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJub3RpZi1idG4tY29udGFpbmVyXCI+XG4gICAgICAgICAgPGgzIGNsYXNzPVwibm90aWZpY2F0aW9uLW1zZ1wiPkNhcHRhaW4gb3VyIHNoaXBzIGFyZSByZWFkeSB0byBiZSBzZXR1cCE8L2gzPiBcbiAgICAgICAgICA8aW1nIHNyYz1cIiR7cm90YXRlQnRufVwiIGFsdD1cIlJvdGF0ZSBCdXR0b25cIiBjbGFzcz1cInJvdGF0ZS1idG5cIj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJwbGF5ZXItYm9hcmRcIj48L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImVuZW15LWJvYXJkXCI+PC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJzaGlwLW9wdGlvbnMtY29udGFpbmVyXCI+XG4gICAgICAgIDxoMT5TaGlwIE9wdGlvbnM8L2gxPlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxoMyBjbGFzcz1cInNoaXAtY2hvc2VuLW1zZ1wiPjwvaDM+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwic2hpcC1vcHRpb25zXCI+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3M9XCJjYXJyaWVyLXByZXZpZXdcIlxuICAgICAgICAgICAgZGF0YS1uYW1lPVwiQ2FycmllclwiXG4gICAgICAgICAgICBkYXRhLXNpemU9XCI1XCJcbiAgICAgICAgICAgIGRhdGEtb3JpZW50YXRpb249XCJob3Jpem9udGFsXCJcbiAgICAgICAgICA+PC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3M9XCJiYXR0bGVzaGlwLXByZXZpZXdcIlxuICAgICAgICAgICAgZGF0YS1uYW1lPVwiQmF0dGxlc2hpcFwiXG4gICAgICAgICAgICBkYXRhLXNpemU9XCI0XCJcbiAgICAgICAgICAgIGRhdGEtb3JpZW50YXRpb249XCJob3Jpem9udGFsXCJcbiAgICAgICAgICA+PC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3M9XCJkZXN0cm95ZXItcHJldmlld1wiXG4gICAgICAgICAgICBkYXRhLW5hbWU9XCJEZXN0cm95ZXJcIlxuICAgICAgICAgICAgZGF0YS1zaXplPVwiM1wiXG4gICAgICAgICAgICBkYXRhLW9yaWVudGF0aW9uPVwiaG9yaXpvbnRhbFwiXG4gICAgICAgICAgPjwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNsYXNzPVwic3VibWFyaW5lLXByZXZpZXdcIlxuICAgICAgICAgICAgZGF0YS1uYW1lPVwiU3VibWFyaW5lXCJcbiAgICAgICAgICAgIGRhdGEtc2l6ZT1cIjJcIlxuICAgICAgICAgICAgZGF0YS1vcmllbnRhdGlvbj1cImhvcml6b250YWxcIlxuICAgICAgICAgID48L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIGA7XG5cbiAgY29uc3Qgc3RhcnRHYW1lTW9kYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBzdGFydEdhbWVNb2RhbC5jbGFzc0xpc3QuYWRkKFwic3RhcnQtZ2FtZS1tb2RhbFwiKTtcblxuICBzdGFydEdhbWVNb2RhbC5pbm5lckhUTUwgPSBgPGRpdiBjbGFzcz1cInN0YXJ0LWdhbWUtbW9kYWwtY29udGVudFwiPlxuICAgICAgPGgxIGNsYXNzPVwic3RhcnQtZ2FtZS10aXRsZVwiPkF3YWl0aW5nIFlvdXIgT3JkZXJzIENhcHRhaW48L2gxPlxuICAgICAgPGJ1dHRvbiBjbGFzcz1cInN0YXJ0LWdhbWUtYnV0dG9uXCI+RmlyZTwvYnV0dG9uPlxuICA8L2Rpdj5gO1xuXG4gIG1haW4uYXBwZW5kQ2hpbGQoc2V0dXBCb2FyZEZyYW1lKTtcbiAgbWFpbi5hcHBlbmRDaGlsZChzdGFydEdhbWVNb2RhbCk7XG59XG5cbmV4cG9ydCB7IHNldHVwQm9hcmRGcmFtZSB9O1xuIiwiZnVuY3Rpb24gaW5pdGlhbGl6ZUdhbWVGcmFtZSgpIHtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtYWluXCIpO1xuXG4gIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgZGl2LmNsYXNzTGlzdC5hZGQoXCJnYW1lLWZyYW1lXCIpO1xuXG4gIGRpdi5pbm5lckhUTUwgPSBgPGRpdiBjbGFzcz1cInBsYXllci1ib2FyZC1jb250YWluZXJcIj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8aDE+QWxsaWVkIFdhdGVyczwvaDE+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwicGxheWVyLWJvYXJkXCI+PC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJlbmVteS1ib2FyZC1nYW1lLWNvbnRhaW5lclwiPlxuICAgICAgICA8aDE+RW5lbWllcyBXYXRlcnM8L2gxPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZW5lbXktYm9hcmRcIlwiPjwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgIGA7XG5cbiAgbWFpbi5hcHBlbmRDaGlsZChkaXYpO1xuXG4gIGNvbnN0IGdhbWVPdmVyTW9kYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBnYW1lT3Zlck1vZGFsLmNsYXNzTGlzdC5hZGQoXCJnYW1lLW92ZXItbW9kYWxcIik7XG5cbiAgZ2FtZU92ZXJNb2RhbC5pbm5lckhUTUwgPSBgPGRpdiBjbGFzcz1cImdhbWUtb3Zlci1tb2RhbC1jb250ZW50XCI+XG4gICAgICA8aDEgY2xhc3M9XCJnYW1lLW92ZXItdGl0bGVcIj48L2gxPlxuICA8L2Rpdj5gO1xuXG4gIG1haW4uYXBwZW5kQ2hpbGQoZ2FtZU92ZXJNb2RhbCk7XG59XG5cbmV4cG9ydCB7IGluaXRpYWxpemVHYW1lRnJhbWUgfTtcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJuIiwiZ2V0dGVyIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJocmVmIiwibmMiLCJsb2NhbHMiLCJDcmVhdGVTaGlwIiwiY29uc3RydWN0b3IiLCJuYW1lIiwic2l6ZSIsImhpdHMiLCJwb3NpdGlvbiIsImRlc3Ryb3llZCIsImlzU3VuayIsImNvbnNvbGUiLCJsb2ciLCJoaXQiLCJzZXRQb3NpdGlvbiIsImluZGljZXMiLCJHYW1lYm9hcmQiLCJ1c2VyIiwiYm9hcmRTaXplIiwiYm9hcmRTdGF0ZSIsIkFycmF5IiwiZmlsbCIsImJvYXJkIiwiY3VyclByZXZTaGlwSW5kaWNlcyIsInNoaXBzTGlzdCIsInNoaXBDaG9zZW4iLCJsYXN0U2F2ZWRTaGlwIiwiaW5pdGlhbGl6ZUJvYXJkUG9zaXRpb25pbmciLCJsb2FkQm9hcmRTdGF0ZSIsInNoaXBPcHRpb25zIiwicmVuZGVyQm9hcmRQbGFjZW1lbnQiLCJpbml0aWFsaXplT3JpZW50YXRpb25IYW5kbGVyIiwiaGlkZUVuZW15Qm9hcmQiLCJjZWxsIiwiY2xhc3NMaXN0IiwiYWRkIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJjZW50ZXJJbmRleCIsImFkZEV2ZW50TGlzdGVuZXIiLCJwcmV2aWV3Qm9hcmRTaGlwIiwicGxhY2VDaG9zZW5TaGlwSW5Cb2FyZCIsImVuZW15U2hpcFBsYWNlbWVudCIsInNoaXAiLCJ2YWxpZFBsYWNlbWVudCIsImVuZW15U2hpcE9yaWVudGFpb24iLCJNYXRoIiwicmFuZG9tIiwiZW5lbXlTdGFydEluZGV4IiwiZmxvb3IiLCJjYWxjdWxhdGVTaGlwUGxhY2VtZW50IiwiaXNQbGFjZW1lbnRWYWxpZCIsImVuZW15U2hpcE9yaWVudGF0aW9uIiwiZW5lbXlTaGlwU2l6ZSIsInN0YXJ0SW5kZXgiLCJlbmRJbmRleCIsInJvd0VuZCIsImNvbFN0YXJ0IiwiZGlzcGxheSIsImNob3NlblNoaXAiLCJjZWxscyIsInJvd1N0YXJ0Iiwib3JpZW50YXRpb24iLCJwcmV2aWV3SG9yaXpvbnRhbCIsInByZXZpZXdWZXJ0aWNhbCIsImhhbGZTaXplIiwidG9nZ2xlQ2hhbmdlT3JpZW50YXRpb24iLCJjdXJyZW50SW5kZXgiLCJzaGlwT3B0aW9uc0NvbnRhaW5lciIsInNoaXBDaG9zZW5Nc2ciLCJjaGlsZHJlbiIsImZyb20iLCJnZXRBdHRyaWJ1dGUiLCJwYXJzZUludCIsImlubmVyVGV4dCIsImZpcnN0U2hpcCIsInBvc2l0aW9uc1ZhbGlkIiwiZXZlcnkiLCJzaGlwQWxyZWFkeVBsYWNlZCIsInNvbWUiLCJleGlzdGluZ1NoaXAiLCJub3RpZk1zZyIsImFza0dhbWVTdGFydCIsInNhdmVCb2FyZFN0YXRlIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsInNlcmlhbGl6YWJsZVNoaXBzTGlzdCIsInNhdmVkQm9hcmRTdGF0ZSIsImdldEl0ZW0iLCJwYXJzZSIsImxvYWRTaGlwc0xpc3QiLCJzYXZlZFNoaXBzTGlzdCIsInNoaXBEYXRhIiwiR2FtZXBsYXkiLCJwbGF5ZXJCb2FyZFN0YXRlIiwicGxheWVyU2hpcHNMaXN0IiwiZW5lbXlCb2FyZFN0YXRlIiwiZW5lbXlTaGlwc0xpc3QiLCJpc1BsYXllclR1cm4iLCJpbml0aWFsaXplR2FtZVBsYXkiLCJwbGF5R2FtZSIsInBvcHVsYXRlQm9hcmRzIiwicGxheWVyTW92ZSIsInBsYXllckJvYXJkIiwiZW5lbXlCb2FyZCIsImNlbGxFbGVtZW50IiwibGlzdGVuVG9BdHRhY2tzIiwiYXR0YWNrRmlyZSIsImVuZFR1cm4iLCJvbmNlIiwiY29udGFpbnMiLCJoaXRUcmFja2VyIiwiY2hlY2tHYW1lU3RhdHVzIiwic3VjY2Vzc2Z1bEF0dGFjayIsImZhaWxlZEF0dGFjayIsImVuZW15TW92ZSIsImF0dGFja2VkQ2VsbEluZGV4IiwiZW5lbXlSYW5kb21BdHRhY2siLCJlbmVteUF0dGFjayIsImF0dGFja2VkSW5kZXgiLCJhdHRhY2tlZENlbGwiLCJzZXRUaW1lb3V0IiwidGFyZ2V0ZWRTaGlwIiwiZW5lbXlEZWZlYXRlZCIsInBsYXllckRlZmVhdGVkIiwiZ2FtZU92ZXIiLCJnYW1lT3ZlclRpdGxlIiwiZ2FtZU92ZXJNb2RhbCIsIm1haW4iLCJkaXYiLCJpbm5lckhUTUwiLCJpbml0aWFsaXplTGFuZGluZ0ZyYW1lIiwicmVtb3ZlSXRlbSIsInNldHVwQm9hcmRGcmFtZSIsInN0YXJ0R2FtZU1vZGFsIiwicGxheWVyIiwiZW5lbXkiLCJpbml0aWFsaXplR2FtZUZyYW1lIiwiaW5pdGlhbGl6ZUFwcCJdLCJzb3VyY2VSb290IjoiIn0=