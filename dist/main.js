(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>p});var i=t(354),a=t.n(i),o=t(314),r=t.n(o),s=t(417),l=t.n(s),c=new URL(t(233),t.b),d=r()(a());d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Notable&display=swap);"]),d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Anton+SC&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Noto+Sans+Symbols:wght@100..900&display=swap);"]);var A=l()(c);d.push([n.id,`*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n\nli {\n  list-style: none;\n}\n\nhtml {\n  font-family: 'Montserrat', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\nhtml,\nbody {\n  height: 100vh;\n}\n\n\nbody {\n  background-image: url(${A});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nmain {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.landing-frame {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n\n.landing-frame>h1 {\n  font-size: 6rem;\n  font-style: italic;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  margin-bottom: 50px;\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  -webkit-text-stroke: 2px black;\n}\n\n@keyframes moveUpDown {\n  0% {\n    transform: translateY(0);\n  }\n\n  50% {\n    transform: translateY(-20px);\n  }\n\n  100% {\n    transform: translateY(0);\n  }\n}\n\n.play-button,\n.multiplay-button {\n  width: 250px;\n  height: 100px;\n  padding-bottom: 10px;\n  font-size: 1.5rem;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-bottom-right-radius: 40%;\n  border-bottom-left-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.play-button:hover,\n.start-game-button:hover,\n.multiplay-button:hover {\n  background-color: rgb(255, 105, 5);\n  color: black;\n  cursor: pointer;\n}\n\n.setupboard-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n}\n\n.player-board,\n.enemy-board,\n.player1-board,\n.player2-board {\n  width: 500px;\n  height: 500px;\n  background-color: white;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.player1-board-container,\n.player2-board-container {\n  display: flex;\n\n}\n\n.player-board-container {\n  displaY: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.enemy-board-game-container {\n  displaY: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.ship-options-container {\n  display: flex;\n  flex-direction: column;\n  gap: 15px\n}\n\n.enemy-board-container {\n  display: none;\n}\n\n.rotate-btn {\n  width: 40px;\n  height: 40px;\n}\n\n.rotate-btn:hover {\n  position: relative;\n  cursor: pointer;\n  bottom: 5px;\n}\n\n.player-ship-options,\n.player1-ship-options,\n.player2-ship-options {\n  width: 500px;\n  height: 500px;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  justify-content: center;\n  align-items: center;\n}\n\n.notification-msg {\n  color: black;\n}\n\n.enemy-cell,\n.player-cell,\n.player1-cell,\n.player2-cell {\n  width: 50px;\n  height: 50px;\n  border: 1px solid black;\n  box-sizing: border-box;\n}\n\n\n.ship-chosen {\n  border: 2px solid white;\n}\n\n.carrier-preview {\n  width: 250px;\n  height: 50px;\n  background-color: violet;\n}\n\n.battleship-preview {\n  width: 200px;\n  height: 50px;\n  background-color: orange;\n}\n\n.destroyer-preview {\n  width: 150px;\n  height: 50px;\n  background-color: yellow;\n}\n\n.submarine-preview {\n  width: 100px;\n  height: 50px;\n  background-color: green;\n}\n\n.ship-preview {\n  background-color: rgba(0, 128, 255, 0.5);\n}\n\n.Carrier {\n  background-color: violet;\n}\n\n.Battleship {\n  background-color: orange;\n}\n\n.Destroyer {\n  background-color: yellow;\n}\n\n.Submarine {\n  background-color: green;\n}\n\n.enemy-ship {\n  background-color: white;\n}\n\n\n.notif-btn-container {\n  display: flex;\n  align-items: center;\n  gap: 30px;\n}\n\n.start-game-modal {\n  display: none;\n  z-index: 1;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: black;\n}\n\n\n.start-game-modal-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 10%;\n  width: 100%;\n  height: 80%;\n}\n\n.start-game-title {\n  font-size: 4rem;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  margin-bottom: 50px;\n  -webkit-text-stroke: 2px black;\n}\n\n.start-game-button {\n  width: 250px;\n  font-size: 2.5rem;\n  padding-bottom: 15px;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-top-right-radius: 40%;\n  border-bottom-right-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.game-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 100px;\n}\n\n.damage {\n  background-color: red;\n}\n\n.missed {\n  background-color: black;\n}\n\n.game-over-modal {\n  display: none;\n  z-index: 1;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.game-over-modal-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 10%;\n  width: 100%;\n  height: 80%;\n}\n\n.game-over-title {\n  font-size: 4rem;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  margin-bottom: 50px;\n  -webkit-text-stroke: 2px black;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Notable&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Anton+SC&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Noto+Sans+Symbols:wght@100..900&display=swap');\n\n\n\n\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n\nli {\n  list-style: none;\n}\n\nhtml {\n  font-family: 'Montserrat', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\nhtml,\nbody {\n  height: 100vh;\n}\n\n\nbody {\n  background-image: url(\"img/bg-img.webp\");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nmain {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.landing-frame {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n\n.landing-frame>h1 {\n  font-size: 6rem;\n  font-style: italic;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  margin-bottom: 50px;\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  -webkit-text-stroke: 2px black;\n}\n\n@keyframes moveUpDown {\n  0% {\n    transform: translateY(0);\n  }\n\n  50% {\n    transform: translateY(-20px);\n  }\n\n  100% {\n    transform: translateY(0);\n  }\n}\n\n.play-button,\n.multiplay-button {\n  width: 250px;\n  height: 100px;\n  padding-bottom: 10px;\n  font-size: 1.5rem;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-bottom-right-radius: 40%;\n  border-bottom-left-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.play-button:hover,\n.start-game-button:hover,\n.multiplay-button:hover {\n  background-color: rgb(255, 105, 5);\n  color: black;\n  cursor: pointer;\n}\n\n.setupboard-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n}\n\n.player-board,\n.enemy-board,\n.player1-board,\n.player2-board {\n  width: 500px;\n  height: 500px;\n  background-color: white;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.player1-board-container,\n.player2-board-container {\n  display: flex;\n\n}\n\n.player-board-container {\n  displaY: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.enemy-board-game-container {\n  displaY: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.ship-options-container {\n  display: flex;\n  flex-direction: column;\n  gap: 15px\n}\n\n.enemy-board-container {\n  display: none;\n}\n\n.rotate-btn {\n  width: 40px;\n  height: 40px;\n}\n\n.rotate-btn:hover {\n  position: relative;\n  cursor: pointer;\n  bottom: 5px;\n}\n\n.player-ship-options,\n.player1-ship-options,\n.player2-ship-options {\n  width: 500px;\n  height: 500px;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  justify-content: center;\n  align-items: center;\n}\n\n.notification-msg {\n  color: black;\n}\n\n.enemy-cell,\n.player-cell,\n.player1-cell,\n.player2-cell {\n  width: 50px;\n  height: 50px;\n  border: 1px solid black;\n  box-sizing: border-box;\n}\n\n\n.ship-chosen {\n  border: 2px solid white;\n}\n\n.carrier-preview {\n  width: 250px;\n  height: 50px;\n  background-color: violet;\n}\n\n.battleship-preview {\n  width: 200px;\n  height: 50px;\n  background-color: orange;\n}\n\n.destroyer-preview {\n  width: 150px;\n  height: 50px;\n  background-color: yellow;\n}\n\n.submarine-preview {\n  width: 100px;\n  height: 50px;\n  background-color: green;\n}\n\n.ship-preview {\n  background-color: rgba(0, 128, 255, 0.5);\n}\n\n.Carrier {\n  background-color: violet;\n}\n\n.Battleship {\n  background-color: orange;\n}\n\n.Destroyer {\n  background-color: yellow;\n}\n\n.Submarine {\n  background-color: green;\n}\n\n.enemy-ship {\n  background-color: white;\n}\n\n\n.notif-btn-container {\n  display: flex;\n  align-items: center;\n  gap: 30px;\n}\n\n.start-game-modal {\n  display: none;\n  z-index: 1;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: black;\n}\n\n\n.start-game-modal-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 10%;\n  width: 100%;\n  height: 80%;\n}\n\n.start-game-title {\n  font-size: 4rem;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  margin-bottom: 50px;\n  -webkit-text-stroke: 2px black;\n}\n\n.start-game-button {\n  width: 250px;\n  font-size: 2.5rem;\n  padding-bottom: 15px;\n  font-family: 'Notable', 'Courier New', Courier, monospace;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-top-right-radius: 40%;\n  border-bottom-right-radius: 40%;\n  color: white;\n  border: none;\n  animation: moveUpDown 3s ease-in-out infinite;\n}\n\n.game-frame {\n  display: flex;\n  flex-direction: row;\n  gap: 100px;\n}\n\n.damage {\n  background-color: red;\n}\n\n.missed {\n  background-color: black;\n}\n\n.game-over-modal {\n  display: none;\n  z-index: 1;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.game-over-modal-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 10%;\n  width: 100%;\n  height: 80%;\n}\n\n.game-over-title {\n  font-size: 4rem;\n  font-family: 'Notable', 'Note Sans Symbols';\n  color: rgb(255, 105, 5);\n  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n  margin-bottom: 50px;\n  -webkit-text-stroke: 2px black;\n}"],sourceRoot:""}]);const p=d},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(i)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(r[l]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);i&&r[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var o={},r=[],s=0;s<n.length;s++){var l=n[s],c=i.base?l[0]+i.base:l[0],d=o[c]||0,A="".concat(c," ").concat(d);o[c]=d+1;var p=t(A),h={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)e[p].references++,e[p].updater(h);else{var m=a(h,i);i.byIndex=s,e.splice(s,0,{identifier:A,updater:m,references:1})}r.push(A)}return r}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=i(n=n||[],a=a||{});return function(n){n=n||[];for(var r=0;r<o.length;r++){var s=t(o[r]);e[s].references--}for(var l=i(n,a),c=0;c<o.length;c++){var d=t(o[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}o=l}}},659:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,a&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},233:(n,e,t)=>{n.exports=t.p+"img/bg-img.webp"}},e={};function t(i){var a=e[i];if(void 0!==a)return a.exports;var o=e[i]={id:i,exports:{}};return n[i](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");if(i.length)for(var a=i.length-1;a>-1&&(!n||!/^http(s?):/.test(n));)n=i[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var i=t(72),a=t.n(i),o=t(825),r=t.n(o),s=t(659),l=t.n(s),c=t(56),d=t.n(c),A=t(540),p=t.n(A),h=t(113),m=t.n(h),u=t(208),b={};b.styleTagTransform=m(),b.setAttributes=d(),b.insert=l().bind(null,"head"),b.domAPI=r(),b.insertStyleElement=p(),a()(u.A,b),u.A&&u.A.locals&&u.A.locals;const y=t.p+"img/rotate.svg";class g{constructor(n,e){this.name=n,this.size=e,this.hits=0,this.position=[],this.destroyed=!1}isSunk(){this.hits===this.size&&(console.log(`${this.name} is sunk`),this.destroyed=!0)}hit(){this.hits++,this.isSunk()}setPosition(n){this.position=n}}class v{constructor(n){this.boardSize=10,this.user=n,this.boardState=Array(this.boardSize*this.boardSize).fill(null),this.board=[],this.currPrevShipIndices=[],this.shipsList=[],this.shipChosen=null,this.lastSavedShip=null,this.initializeBoardPositioning(),this.loadBoardState(),this.shipOptions(),console.log(`this.user: ${this.user}`)}initializeBoardPositioning(){this.renderBoardPlacement(),this.initializeOrientationHandler(),"enemy"===this.user&&this.hideEnemyBoard()}renderBoardPlacement(){const n=document.querySelector(`.${this.user}-board`);for(let e=0;e<this.boardSize*this.boardSize;e++){const t=document.createElement("div");t.classList.add(`${this.user}-cell`,`${this.user}-cell-${e}`),n.appendChild(t)}return"player"!==this.user&&"player1"!==this.user&&"player2"!==this.user||document.querySelectorAll(`.${this.user}-cell`).forEach(((n,e)=>{n.addEventListener("mouseover",(()=>{this.shipChosen&&this.previewBoardShip(e,this.shipChosen)})),n.addEventListener("click",(()=>{this.shipChosen&&this.placeChosenShipInBoard(this.shipChosen)}))})),"enemy"===this.user&&this.enemyShipPlacement(),n}enemyShipPlacement(){this.currPrevShipIndices=[],[{name:"Carrier",size:5},{name:"Battleship",size:4},{name:"Destroyer",size:3},{name:"Submarine",size:2}].forEach((n=>{let e=!1;for(;!e;){const t=Math.random()>.5?"horizontal":"vertical",i=Math.floor(Math.random()*(this.boardSize*this.boardSize));this.currPrevShipIndices=[],this.calculateShipPlacement(i,t,n.size),n.position=[...this.currPrevShipIndices],this.isPlacementValid(n)&&(this.placeChosenShipInBoard(n),e=!0)}}))}calculateShipPlacement(n,e,t){if("horizontal"===e){let e=n,i=e+t-1;const a=Math.floor(e/this.boardSize)*this.boardSize+this.boardSize-1;i>a&&(i=a,e=i-t+1);for(let n=e;n<=i;n++)this.currPrevShipIndices.push(n)}else if("vertical"===e){let e=n,i=e+(t-1)*this.boardSize;const a=e%this.boardSize;i>=this.boardSize*this.boardSize&&(i=a+(this.boardSize-1)*this.boardSize,e=i-(t-1)*this.boardSize);for(let n=e;n<=i;n+=this.boardSize)this.currPrevShipIndices.push(n)}}hideEnemyBoard(){document.querySelector(`.${this.user}-board`).style.display="none"}previewBoardShip(n,e){const t=document.querySelectorAll(`.${this.user}-board .${this.user}-cell`);t.forEach((n=>n.classList.remove("ship-preview"))),this.currPrevShipIndices=[];const i=Math.floor(n/this.boardSize)*this.boardSize,a=i+this.boardSize-1;"horizontal"===e.orientation?this.previewHorizontal(i,a,e,t,n):this.previewVertical(n,e,t)}previewHorizontal(n,e,t,i,a){const o=Math.floor(t.size/2);let r=a-o,s=a+o;if(t.size%2!=0){r<n&&(r=n,s=r+t.size-1),s>e&&(s=e,r=s-t.size+1);for(let n=r;n<=s;n++)i[n]&&(i[n].classList.add("ship-preview"),this.currPrevShipIndices.push(n))}else if(t.size%2==0){let o=a,r=a+t.size-1;o<n&&(o=n,r=o+t.size-1),r>e&&(r=e,o=r-t.size+1);for(let n=o;n<=r;n++)i[n]&&(i[n].classList.add("ship-preview"),this.currPrevShipIndices.push(n))}}previewVertical(n,e,t){const i=n%this.boardSize;let a=n-i+i-Math.floor(e.size/2)*this.boardSize,o=a+(e.size-1)*this.boardSize;a<0&&(a=i,o=a+(e.size-1)*this.boardSize),o>=this.boardSize*this.boardSize&&(o=i+(this.boardSize-1)*this.boardSize,a=o-(e.size-1)*this.boardSize);for(let n=a;n<=o;n+=this.boardSize)t[n]&&(t[n].classList.add("ship-preview"),this.currPrevShipIndices.push(n))}toggleChangeOrientation(n){"horizontal"===n.orientation?n.orientation="vertical":"vertical"===n.orientation&&(n.orientation="horizontal")}initializeOrientationHandler(){"player"!==this.user&&"player1"!==this.user&&"player2"!==this.user||document.querySelector(".rotate-btn").addEventListener("click",(()=>{this.shipChosen&&(this.toggleChangeOrientation(this.shipChosen),this.previewBoardShip(this.shipChosen.currentIndex,this.shipChosen))}))}shipOptions(){if("enemy"===this.user)return;const n=document.querySelector(`.${this.user}-ship-options`),e=document.querySelector(".ship-chosen-msg"),t=n.children;if(Array.from(t).forEach((n=>{n.addEventListener("click",(()=>{this.lastSavedShip&&this.lastSavedShip.classList.remove("ship-chosen"),n.classList.add("ship-chosen"),this.shipChosen={name:n.getAttribute("data-name"),size:parseInt(n.getAttribute("data-size"),10),orientation:n.getAttribute("data-orientation")},e.innerText=`${this.shipChosen.name} selected`,this.lastSavedShip=n}))})),t.length>0){const n=t[0];this.lastSavedShip&&this.lastSavedShip.classList.remove("ship-chosen"),n.classList.add("ship-chosen"),this.shipChosen={name:n.getAttribute("data-name"),size:parseInt(n.getAttribute("data-size"),10),orientation:n.getAttribute("data-orientation")},e.innerText=`${this.shipChosen.name} selected`,this.lastSavedShip=n}}isPlacementValid(n){const{position:e}=n,t=e.every((n=>n>=0&&n<this.boardSize*this.boardSize&&null===this.boardState[n])),i=this.shipsList.some((e=>e.name===n.name));return t&&!i}placeChosenShipInBoard(n){if(!n)return;const e=new g(n.name,n.size,this.user);e.position=[...this.currPrevShipIndices];const t=document.querySelector(".notification-msg");if("player"===this.user||"player1"===this.user||"player2"===this.user){if(this.isPlacementValid(e))this.currPrevShipIndices.forEach((n=>{this.boardState[n]=e.name,document.querySelector(`.${this.user}-board .${this.user}-cell-${n}`).classList.add(`${e.name}`)})),this.shipsList.push(e),t.innerText=`${e.name} deployed Captain!`;else{const n=this.shipsList.some((n=>n.name===e.name));t.innerText=n?"Ship already in position Captain.":`Invalid position for ${e.name} Captain.`}"player"===this.user&&this.askGameStart()}else"enemy"===this.user&&(this.isPlacementValid(e)&&(this.currPrevShipIndices.forEach((n=>{this.boardState[n]=e.name,document.querySelector(`.${this.user}-board .${this.user}-cell-${n}`).classList.add(`${e.name}`)})),this.shipsList.push(e)),this.saveBoardState())}askGameStart(){4===this.shipsList.length&&(document.querySelector(".notification-msg").innerText="Full Steam Ahead!",document.querySelector(".start-game-modal").style.display="block"),this.saveBoardState()}saveBoardState(){localStorage.setItem(`${this.user}-boardState`,JSON.stringify(this.boardState));const n=this.shipsList.map((n=>({name:n.name,size:n.size,user:n.user})));localStorage.setItem(`${this.user}-shipsList`,JSON.stringify(n))}loadBoardState(){const n=localStorage.getItem(`${this.user}-boardState`);return null!==n&&(this.boardState=JSON.parse(n)),this.boardState}loadShipsList(){const n=localStorage.getItem(`${this.user}-shipsList`);return null!==n&&(this.shipsList=JSON.parse(n).map((n=>new g(n.name,n.size,n.user)))),this.shipsList}}function E(){const n=document.querySelector("main"),e=document.createElement("div");e.classList.add("game-frame"),e.innerHTML='<div class="player-board-container">\n        <div>\n          <h1>Allied Waters</h1>\n        </div>\n        <div class="player-board"></div>\n      </div>\n      <div class="enemy-board-game-container">\n        <h1>Enemies Waters</h1>\n        <div class="enemy-board""></div>\n      </div>\n     ',n.appendChild(e);const t=document.createElement("div");t.classList.add("game-over-modal"),t.innerHTML='<div class="game-over-modal-content">\n      <h1 class="game-over-title"></h1>\n      <button class="play-again-btn">Play Again</button>\n  </div>',n.appendChild(t)}class C{constructor(n,e,t,i){this.playerBoardState=n,this.playerShipsList=e,this.enemyBoardState=t,this.enemyShipsList=i,this.isPlayerTurn=!0,this.gameOverFlag=!1,this.availableEnemytoPlayerMoves=Array.from({length:n.length},((n,e)=>e)),this.initializeGamePlay()}initializeGamePlay(){this.playGame()}playGame(){this.populateBoards(),this.playerMove()}populateBoards(){const n=document.querySelector(".player-board"),e=document.querySelector(".enemy-board");this.playerBoardState.forEach(((e,t)=>{const i=document.createElement("div");i.classList.add("player-cell"),null===e?(i.classList.add(`player-cell-${t}`),i.classList.add(`empty-cell-${t}`)):i.classList.add(e),n.appendChild(i)})),this.enemyBoardState.forEach(((n,t)=>{const i=document.createElement("div");i.classList.add("enemy-cell"),null===n?(i.classList.add(`enemy-cell-${t}`),i.classList.add(`empty-cell-${t}`)):(i.classList.add(n),i.classList.add("enemy-ship")),e.appendChild(i)}))}listenToAttacks(n){const e=document.querySelectorAll(`.${n}-cell`);"enemy"===n&&e.forEach((n=>{n.addEventListener("click",(()=>{this.isPlayerTurn&&(n.classList.contains("damage")||n.classList.contains("missed")||(this.attackFire("player",n),this.endTurn()))}),{once:!0})}))}attackFire(n,e){["Carrier","Battleship","Destroyer","Submarine"].some((t=>!!e.classList.contains(t)&&(e.classList.remove(t),e.classList.add("damage"),this.hitTracker(t,n),this.checkGameStatus(),!0)))||e.classList.add("missed")}successfulAttack(){console.log("Successful attack captain, one of their ship is damaged")}failedAttack(){console.log("Our attacks have missed Captain")}playerMove(){this.listenToAttacks("enemy")}enemyMove(){const n=this.enemyRandomAttack();this.enemyAttack(n)}enemyRandomAttack(){const n=Math.floor(Math.random()*this.availableEnemytoPlayerMoves.length);return this.availableEnemytoPlayerMoves[n]}enemyAttack(n){const e=document.querySelectorAll(".player-cell");if(n<=e.length){const t=e[n];t.classList.contains("damage")||t.classList.contains("missed")?setTimeout((()=>{this.enemyMove()}),250):(this.attackFire("enemy",t),this.availableEnemytoPlayerMoves=this.availableEnemytoPlayerMoves.filter((e=>e!==n)),this.endTurn())}}endTurn(){this.gameOverFlag||(this.isPlayerTurn=!this.isPlayerTurn,this.isPlayerTurn?this.playerMove():setTimeout((()=>{this.enemyMove()}),500))}hitTracker(n,e){"player"===e&&this.enemyShipsList.forEach((e=>{e.name===n&&e.hit()})),"enemy"===e&&this.playerShipsList.forEach((e=>{e.name===n&&e.hit()}))}checkGameStatus(){const n=this.enemyShipsList.every((n=>!0===n.destroyed)),e=this.playerShipsList.every((n=>!0===n.destroyed));this.gameOver(e,n)}gameOver(n,e){const t=document.querySelector(".game-over-title"),i=document.querySelector(".game-over-modal");e?(t.innerText="You win",this.gameOverFlag=!0,i.style.display="block"):n&&(this.gameOverFlag=!0,t.innerText="Defeated",i.style.display="block")}}function f(n,e){n&&e?(localStorage.removeItem(`${n}-boardState`),localStorage.removeItem(`${n}-shipsList`),localStorage.removeItem(`${e}-boardState`),localStorage.removeItem(`${e}-shipsList`)):(localStorage.removeItem("player-boardState"),localStorage.removeItem("player-shipsaList"),localStorage.removeItem("enemy-boardState"),localStorage.removeItem("enemy-shipsList"))}function B(n,e){f(n,e)}!function n(){const e=document.querySelector("main");B(),function(){const n=document.querySelector("main");n.innerHTML="";const e=document.createElement("div");e.classList.add("landing-frame"),e.innerHTML='<h1>Battle Ship⛴</h2>\n  <div>\n    <button class="play-button">Single Player</button>\n    <button class="multiplay-button">Multi-Player</button>\n  </div>\n',n.appendChild(e)}(),document.querySelector(".play-button").addEventListener("click",(()=>{e.innerHTML="",function(){const n=document.querySelector("main");n.innerHTML="";const e=document.createElement("div");e.classList.add("setupboard-frame"),e.innerHTML=`<div class="player-board-container">\n        <h1>Player Board</h1>\n        <div class="notif-btn-container">\n          <h3 class="notification-msg">Captain our ships are ready to be setup!</h3> \n          <img src="${y}" alt="Rotate Button" class="rotate-btn">\n        </div>\n        <div class="player-board"></div>\n        <div class="enemy-board"></div>\n      </div>\n      <div class="ship-options-container">\n        <h1>Ship Options</h1>\n        <div>\n          <h3 class="ship-chosen-msg"></h3>\n        </div>\n        <div class="player-ship-options">\n          <div\n            class="carrier-preview"\n            data-name="Carrier"\n            data-size="5"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="battleship-preview"\n            data-name="Battleship"\n            data-size="4"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="destroyer-preview"\n            data-name="Destroyer"\n            data-size="3"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="submarine-preview"\n            data-name="Submarine"\n            data-size="2"\n            data-orientation="horizontal"\n          ></div>\n        </div>\n      </div>\n      `;const t=document.createElement("div");t.classList.add("start-game-modal"),t.innerHTML='<div class="start-game-modal-content">\n      <h1 class="start-game-title">Awaiting Your Orders Captain</h1>\n      <button class="start-game-button">Fire</button>\n  </div>',n.appendChild(e),n.appendChild(t)}();const t=new v("player"),i=new v("enemy");document.querySelector(".start-game-button").addEventListener("click",(()=>{e.innerHTML="",E(),new C(t.loadBoardState(),t.loadShipsList(),i.loadBoardState(),i.loadShipsList()),document.querySelector(".play-again-btn").addEventListener("click",(()=>{f(),B(),n()}))}))})),document.querySelector(".multiplay-button").addEventListener("click",(()=>{e.innerHTML="",function(){const n=document.querySelector("main");n.innerHTML="";const e=document.createElement("div");e.classList.add("setupboard-frame"),e.innerHTML=`<div class="player1-board-container">\n      <div>\n        <h1>Player 1 Board</h1>\n        <div class="notif-btn-container">\n          <h3 class="notification-msg">Captain our ships are ready to be setup!</h3> \n          <img src="${y}" alt="Rotate Button" class="rotate-btn">\n        </div>\n        <div class="player1-board"></div>\n      </div>\n      <div class="ship-options-container">\n        <h1>Ship Options</h1>\n        <div>\n          <h3 class="ship-chosen-msg"></h3>\n        </div>\n        <div class="player1-ship-options">\n          <div\n            class="carrier-preview"\n            data-name="Carrier"\n            data-size="5"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="battleship-preview"\n            data-name="Battleship"\n            data-size="4"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="destroyer-preview"\n            data-name="Destroyer"\n            data-size="3"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="submarine-preview"\n            data-name="Submarine"\n            data-size="2"\n            data-orientation="horizontal"\n          ></div>\n        </div>\n        <button class="player1-ready-button">Ready</button>\n      </div>\n    </div>\n    <div class="player2-board-container">\n      <div>\n        <h1>Player 2 Board</h1>\n        <div class="notif-btn-container">\n          <h3 class="notification-msg">Captain our ships are ready to be setup!</h3> \n          <img src="${y}" alt="Rotate Button" class="rotate-btn">\n        </div>\n        <div class="player2-board"></div>\n      </div>\n      <div class="ship-options-container">\n        <h1>Ship Options</h1>\n        <div>\n          <h3 class="ship-chosen-msg"></h3>\n        </div>\n        <div class="player2-ship-options">\n          <div\n            class="carrier-preview"\n            data-name="Carrier"\n            data-size="5"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="battleship-preview"\n            data-name="Battleship"\n            data-size="4"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="destroyer-preview"\n            data-name="Destroyer"\n            data-size="3"\n            data-orientation="horizontal"\n          ></div>\n          <div\n            class="submarine-preview"\n            data-name="Submarine"\n            data-size="2"\n            data-orientation="horizontal"\n          ></div>\n        </div>\n        <button class="player2-ready-button">Ready</button>\n      </div>\n    </div>\n      `;const t=document.createElement("div");t.classList.add("start-game-modal"),t.innerHTML='<div class="start-game-modal-content">\n      <h1 class="start-game-title">Awaiting Your Orders Captain</h1>\n      <button class="start-game-button">Fire</button>\n  </div>',n.appendChild(e),n.appendChild(t)}();const t=new v("player1"),i=new v("player2"),a=document.querySelector(".player1-board-container"),o=document.querySelector(".player2-board-container");let r=!1,s=!1;o.style.display="none",document.querySelector(".player1-ready-button").addEventListener("click",(()=>{r=!0,a.style.display="none",o.style.display="flex",t.saveBoardState()})),document.querySelector(".player2-ready-button").addEventListener("click",(()=>{s=!0,i.saveBoardState(),r&&(document.querySelector(".start-game-modal").style.display="block")})),document.querySelector(".start-game-button").addEventListener("click",(()=>{e.innerHTML="",E(),new C(t.loadBoardState(),t.loadShipsList(),i.loadBoardState(),i.loadShipsList()),document.querySelector(".play-again-btn").addEventListener("click",(()=>{B(t,i),n()}))}))}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,